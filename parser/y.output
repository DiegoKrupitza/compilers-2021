Grammar

    0 $accept: Programm $end

    1 Programm: ProgrammStart Programm
    2         | %empty

    3 ProgrammStart: Interface ';'
    4              | Class ';'

    5 Interface: INTERFACE ID ':' AbstraktMethodsLoop END

    6 AbstraktMethodsLoop: AbstraktMethod AbstraktMethodsLoop
    7                    | %empty

    8 AbstraktMethod: ID '(' ParamTypesLoop ')' ':' Type
    9               | ID '(' ')' ':' Type

   10 ParamTypesLoop: TypesLoop Type
   11               | Type

   12 TypesLoop: TypesLoop Type ','
   13          | Type ','

   14 Class: CLASS ID IMPLEMENTS ImplementsLoop ':' MemeberLoop END
   15      | CLASS ID IMPLEMENTS ':' MemeberLoop END
   16      | CLASS ID IMPLEMENTS ImplementsLoop ':' END
   17      | CLASS ID IMPLEMENTS ':' END

   18 MemeberLoop: MemeberLoop Member ';'
   19            | Member ';'

   20 ImplementsLoop: ImplementsLoop ID
   21               | ID

   22 Member: VAR ID ':' Type
   23       | METHOD ID '(' ')' Stats END
   24       | METHOD ID '(' Pars ')' Stats END

   25 Type: INT
   26     | ID

   27 Pars: ParsLoop Par
   28     | Par

   29 ParsLoop: ParsLoop Par ','
   30         | Par ','

   31 Par: ID ':' Type

   32 Stats: Stat ';' Stats
   33      | %empty

   34 Stat: RETURN Expr
   35     | IF Expr THEN Stats END
   36     | IF Expr THEN Stats ELSE Stats END
   37     | WHILE Expr DO Stats END
   38     | VAR ID ':' Type ASSIGNOP Expr
   39     | ID ASSIGNOP Expr
   40     | Expr

   41 Expr: Term
   42     | OptionaNot Term
   43     | Term OptionalPlusTerm
   44     | Term OptionalMalTerm
   45     | Term OptionalAndTerm
   46     | Term SpecialOperation Term
   47     | NEW ID

   48 OptionaNot: NOT OptionaNot
   49           | NOT

   50 OptionalPlusTerm: '+' Term OptionalPlusTerm
   51                 | '+' Term

   52 OptionalMalTerm: '*' Term OptionalMalTerm
   53                | '*' Term

   54 OptionalAndTerm: AND Term OptionalAndTerm
   55                | AND Term

   56 SpecialOperation: '-'
   57                 | '<'
   58                 | '='

   59 Term: '(' Expr ')'
   60     | NUM
   61     | THIS
   62     | NULL_VAL ID
   63     | ID
   64     | Term '.' ID '(' ')'
   65     | Term '.' ID '(' ParamsExpr ')'

   66 ParamsExpr: Expr
   67           | ParamsExprLoop Expr

   68 ParamsExprLoop: Expr ','
   69               | ParamsExprLoop Expr ','


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 9 23 24 59 64 65
')' (41) 8 9 23 24 59 64 65
'*' (42) 52 53
'+' (43) 50 51
',' (44) 12 13 29 30 68 69
'-' (45) 56
'.' (46) 64 65
':' (58) 5 8 9 14 15 16 17 22 31 38
';' (59) 3 4 18 19 32
'<' (60) 57
'=' (61) 58
error (256)
ID (258) 5 8 9 14 15 16 17 20 21 22 23 24 26 31 38 39 47 62 63 64 65
NUM (259) 60
INTERFACE (260) 5
CLASS (261) 14 15 16 17
IMPLEMENTS (262) 14 15 16 17
VAR (263) 22 38
METHOD (264) 23 24
INT (265) 25
RETURN (266) 34
IF (267) 35 36
THEN (268) 35 36
ELSE (269) 36
WHILE (270) 37
DO (271) 37
NOT (272) 48 49
AND (273) 54 55
NEW (274) 47
THIS (275) 61
NULL_VAL (276) 62
END (277) 5 14 15 16 17 23 24 35 36 37
ASSIGNOP (278) 38 39


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
Programm (36)
    on left: 1 2, on right: 0 1
ProgrammStart (37)
    on left: 3 4, on right: 1
Interface (38)
    on left: 5, on right: 3
AbstraktMethodsLoop (39)
    on left: 6 7, on right: 5 6
AbstraktMethod (40)
    on left: 8 9, on right: 6
ParamTypesLoop (41)
    on left: 10 11, on right: 8
TypesLoop (42)
    on left: 12 13, on right: 10 12
Class (43)
    on left: 14 15 16 17, on right: 4
MemeberLoop (44)
    on left: 18 19, on right: 14 15 18
ImplementsLoop (45)
    on left: 20 21, on right: 14 16 20
Member (46)
    on left: 22 23 24, on right: 18 19
Type (47)
    on left: 25 26, on right: 8 9 10 11 12 13 22 31 38
Pars (48)
    on left: 27 28, on right: 24
ParsLoop (49)
    on left: 29 30, on right: 27 29
Par (50)
    on left: 31, on right: 27 28 29 30
Stats (51)
    on left: 32 33, on right: 23 24 32 35 36 37
Stat (52)
    on left: 34 35 36 37 38 39 40, on right: 32
Expr (53)
    on left: 41 42 43 44 45 46 47, on right: 34 35 36 37 38 39 40 59
    66 67 68 69
OptionaNot (54)
    on left: 48 49, on right: 42 48
OptionalPlusTerm (55)
    on left: 50 51, on right: 43 50
OptionalMalTerm (56)
    on left: 52 53, on right: 44 52
OptionalAndTerm (57)
    on left: 54 55, on right: 45 54
SpecialOperation (58)
    on left: 56 57 58, on right: 46
Term (59)
    on left: 59 60 61 62 63 64 65, on right: 41 42 43 44 45 46 50 51
    52 53 54 55 64 65
ParamsExpr (60)
    on left: 66 67, on right: 65
ParamsExprLoop (61)
    on left: 68 69, on right: 67 69


State 0

    0 $accept: . Programm $end

    INTERFACE  shift, and go to state 1
    CLASS      shift, and go to state 2

    $default  reduce using rule 2 (Programm)

    Programm       go to state 3
    ProgrammStart  go to state 4
    Interface      go to state 5
    Class          go to state 6


State 1

    5 Interface: INTERFACE . ID ':' AbstraktMethodsLoop END

    ID  shift, and go to state 7


State 2

   14 Class: CLASS . ID IMPLEMENTS ImplementsLoop ':' MemeberLoop END
   15      | CLASS . ID IMPLEMENTS ':' MemeberLoop END
   16      | CLASS . ID IMPLEMENTS ImplementsLoop ':' END
   17      | CLASS . ID IMPLEMENTS ':' END

    ID  shift, and go to state 8


State 3

    0 $accept: Programm . $end

    $end  shift, and go to state 9


State 4

    1 Programm: ProgrammStart . Programm

    INTERFACE  shift, and go to state 1
    CLASS      shift, and go to state 2

    $default  reduce using rule 2 (Programm)

    Programm       go to state 10
    ProgrammStart  go to state 4
    Interface      go to state 5
    Class          go to state 6


State 5

    3 ProgrammStart: Interface . ';'

    ';'  shift, and go to state 11


State 6

    4 ProgrammStart: Class . ';'

    ';'  shift, and go to state 12


State 7

    5 Interface: INTERFACE ID . ':' AbstraktMethodsLoop END

    ':'  shift, and go to state 13


State 8

   14 Class: CLASS ID . IMPLEMENTS ImplementsLoop ':' MemeberLoop END
   15      | CLASS ID . IMPLEMENTS ':' MemeberLoop END
   16      | CLASS ID . IMPLEMENTS ImplementsLoop ':' END
   17      | CLASS ID . IMPLEMENTS ':' END

    IMPLEMENTS  shift, and go to state 14


State 9

    0 $accept: Programm $end .

    $default  accept


State 10

    1 Programm: ProgrammStart Programm .

    $default  reduce using rule 1 (Programm)


State 11

    3 ProgrammStart: Interface ';' .

    $default  reduce using rule 3 (ProgrammStart)


State 12

    4 ProgrammStart: Class ';' .

    $default  reduce using rule 4 (ProgrammStart)


State 13

    5 Interface: INTERFACE ID ':' . AbstraktMethodsLoop END

    ID  shift, and go to state 15

    $default  reduce using rule 7 (AbstraktMethodsLoop)

    AbstraktMethodsLoop  go to state 16
    AbstraktMethod       go to state 17


State 14

   14 Class: CLASS ID IMPLEMENTS . ImplementsLoop ':' MemeberLoop END
   15      | CLASS ID IMPLEMENTS . ':' MemeberLoop END
   16      | CLASS ID IMPLEMENTS . ImplementsLoop ':' END
   17      | CLASS ID IMPLEMENTS . ':' END

    ID   shift, and go to state 18
    ':'  shift, and go to state 19

    ImplementsLoop  go to state 20


State 15

    8 AbstraktMethod: ID . '(' ParamTypesLoop ')' ':' Type
    9               | ID . '(' ')' ':' Type

    '('  shift, and go to state 21


State 16

    5 Interface: INTERFACE ID ':' AbstraktMethodsLoop . END

    END  shift, and go to state 22


State 17

    6 AbstraktMethodsLoop: AbstraktMethod . AbstraktMethodsLoop

    ID  shift, and go to state 15

    $default  reduce using rule 7 (AbstraktMethodsLoop)

    AbstraktMethodsLoop  go to state 23
    AbstraktMethod       go to state 17


State 18

   21 ImplementsLoop: ID .

    $default  reduce using rule 21 (ImplementsLoop)


State 19

   15 Class: CLASS ID IMPLEMENTS ':' . MemeberLoop END
   17      | CLASS ID IMPLEMENTS ':' . END

    VAR     shift, and go to state 24
    METHOD  shift, and go to state 25
    END     shift, and go to state 26

    MemeberLoop  go to state 27
    Member       go to state 28


State 20

   14 Class: CLASS ID IMPLEMENTS ImplementsLoop . ':' MemeberLoop END
   16      | CLASS ID IMPLEMENTS ImplementsLoop . ':' END
   20 ImplementsLoop: ImplementsLoop . ID

    ID   shift, and go to state 29
    ':'  shift, and go to state 30


State 21

    8 AbstraktMethod: ID '(' . ParamTypesLoop ')' ':' Type
    9               | ID '(' . ')' ':' Type

    ID   shift, and go to state 31
    INT  shift, and go to state 32
    ')'  shift, and go to state 33

    ParamTypesLoop  go to state 34
    TypesLoop       go to state 35
    Type            go to state 36


State 22

    5 Interface: INTERFACE ID ':' AbstraktMethodsLoop END .

    $default  reduce using rule 5 (Interface)


State 23

    6 AbstraktMethodsLoop: AbstraktMethod AbstraktMethodsLoop .

    $default  reduce using rule 6 (AbstraktMethodsLoop)


State 24

   22 Member: VAR . ID ':' Type

    ID  shift, and go to state 37


State 25

   23 Member: METHOD . ID '(' ')' Stats END
   24       | METHOD . ID '(' Pars ')' Stats END

    ID  shift, and go to state 38


State 26

   17 Class: CLASS ID IMPLEMENTS ':' END .

    $default  reduce using rule 17 (Class)


State 27

   15 Class: CLASS ID IMPLEMENTS ':' MemeberLoop . END
   18 MemeberLoop: MemeberLoop . Member ';'

    VAR     shift, and go to state 24
    METHOD  shift, and go to state 25
    END     shift, and go to state 39

    Member  go to state 40


State 28

   19 MemeberLoop: Member . ';'

    ';'  shift, and go to state 41


State 29

   20 ImplementsLoop: ImplementsLoop ID .

    $default  reduce using rule 20 (ImplementsLoop)


State 30

   14 Class: CLASS ID IMPLEMENTS ImplementsLoop ':' . MemeberLoop END
   16      | CLASS ID IMPLEMENTS ImplementsLoop ':' . END

    VAR     shift, and go to state 24
    METHOD  shift, and go to state 25
    END     shift, and go to state 42

    MemeberLoop  go to state 43
    Member       go to state 28


State 31

   26 Type: ID .

    $default  reduce using rule 26 (Type)


State 32

   25 Type: INT .

    $default  reduce using rule 25 (Type)


State 33

    9 AbstraktMethod: ID '(' ')' . ':' Type

    ':'  shift, and go to state 44


State 34

    8 AbstraktMethod: ID '(' ParamTypesLoop . ')' ':' Type

    ')'  shift, and go to state 45


State 35

   10 ParamTypesLoop: TypesLoop . Type
   12 TypesLoop: TypesLoop . Type ','

    ID   shift, and go to state 31
    INT  shift, and go to state 32

    Type  go to state 46


State 36

   11 ParamTypesLoop: Type .
   13 TypesLoop: Type . ','

    ','  shift, and go to state 47

    $default  reduce using rule 11 (ParamTypesLoop)


State 37

   22 Member: VAR ID . ':' Type

    ':'  shift, and go to state 48


State 38

   23 Member: METHOD ID . '(' ')' Stats END
   24       | METHOD ID . '(' Pars ')' Stats END

    '('  shift, and go to state 49


State 39

   15 Class: CLASS ID IMPLEMENTS ':' MemeberLoop END .

    $default  reduce using rule 15 (Class)


State 40

   18 MemeberLoop: MemeberLoop Member . ';'

    ';'  shift, and go to state 50


State 41

   19 MemeberLoop: Member ';' .

    $default  reduce using rule 19 (MemeberLoop)


State 42

   16 Class: CLASS ID IMPLEMENTS ImplementsLoop ':' END .

    $default  reduce using rule 16 (Class)


State 43

   14 Class: CLASS ID IMPLEMENTS ImplementsLoop ':' MemeberLoop . END
   18 MemeberLoop: MemeberLoop . Member ';'

    VAR     shift, and go to state 24
    METHOD  shift, and go to state 25
    END     shift, and go to state 51

    Member  go to state 40


State 44

    9 AbstraktMethod: ID '(' ')' ':' . Type

    ID   shift, and go to state 31
    INT  shift, and go to state 32

    Type  go to state 52


State 45

    8 AbstraktMethod: ID '(' ParamTypesLoop ')' . ':' Type

    ':'  shift, and go to state 53


State 46

   10 ParamTypesLoop: TypesLoop Type .
   12 TypesLoop: TypesLoop Type . ','

    ','  shift, and go to state 54

    $default  reduce using rule 10 (ParamTypesLoop)


State 47

   13 TypesLoop: Type ',' .

    $default  reduce using rule 13 (TypesLoop)


State 48

   22 Member: VAR ID ':' . Type

    ID   shift, and go to state 31
    INT  shift, and go to state 32

    Type  go to state 55


State 49

   23 Member: METHOD ID '(' . ')' Stats END
   24       | METHOD ID '(' . Pars ')' Stats END

    ID   shift, and go to state 56
    ')'  shift, and go to state 57

    Pars      go to state 58
    ParsLoop  go to state 59
    Par       go to state 60


State 50

   18 MemeberLoop: MemeberLoop Member ';' .

    $default  reduce using rule 18 (MemeberLoop)


State 51

   14 Class: CLASS ID IMPLEMENTS ImplementsLoop ':' MemeberLoop END .

    $default  reduce using rule 14 (Class)


State 52

    9 AbstraktMethod: ID '(' ')' ':' Type .

    $default  reduce using rule 9 (AbstraktMethod)


State 53

    8 AbstraktMethod: ID '(' ParamTypesLoop ')' ':' . Type

    ID   shift, and go to state 31
    INT  shift, and go to state 32

    Type  go to state 61


State 54

   12 TypesLoop: TypesLoop Type ',' .

    $default  reduce using rule 12 (TypesLoop)


State 55

   22 Member: VAR ID ':' Type .

    $default  reduce using rule 22 (Member)


State 56

   31 Par: ID . ':' Type

    ':'  shift, and go to state 62


State 57

   23 Member: METHOD ID '(' ')' . Stats END

    ID        shift, and go to state 63
    NUM       shift, and go to state 64
    VAR       shift, and go to state 65
    RETURN    shift, and go to state 66
    IF        shift, and go to state 67
    WHILE     shift, and go to state 68
    NOT       shift, and go to state 69
    NEW       shift, and go to state 70
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    $default  reduce using rule 33 (Stats)

    Stats       go to state 74
    Stat        go to state 75
    Expr        go to state 76
    OptionaNot  go to state 77
    Term        go to state 78


State 58

   24 Member: METHOD ID '(' Pars . ')' Stats END

    ')'  shift, and go to state 79


State 59

   27 Pars: ParsLoop . Par
   29 ParsLoop: ParsLoop . Par ','

    ID  shift, and go to state 56

    Par  go to state 80


State 60

   28 Pars: Par .
   30 ParsLoop: Par . ','

    ','  shift, and go to state 81

    $default  reduce using rule 28 (Pars)


State 61

    8 AbstraktMethod: ID '(' ParamTypesLoop ')' ':' Type .

    $default  reduce using rule 8 (AbstraktMethod)


State 62

   31 Par: ID ':' . Type

    ID   shift, and go to state 31
    INT  shift, and go to state 32

    Type  go to state 82


State 63

   39 Stat: ID . ASSIGNOP Expr
   63 Term: ID .

    ASSIGNOP  shift, and go to state 83

    $default  reduce using rule 63 (Term)


State 64

   60 Term: NUM .

    $default  reduce using rule 60 (Term)


State 65

   38 Stat: VAR . ID ':' Type ASSIGNOP Expr

    ID  shift, and go to state 84


State 66

   34 Stat: RETURN . Expr

    ID        shift, and go to state 85
    NUM       shift, and go to state 64
    NOT       shift, and go to state 69
    NEW       shift, and go to state 70
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    Expr        go to state 86
    OptionaNot  go to state 77
    Term        go to state 78


State 67

   35 Stat: IF . Expr THEN Stats END
   36     | IF . Expr THEN Stats ELSE Stats END

    ID        shift, and go to state 85
    NUM       shift, and go to state 64
    NOT       shift, and go to state 69
    NEW       shift, and go to state 70
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    Expr        go to state 87
    OptionaNot  go to state 77
    Term        go to state 78


State 68

   37 Stat: WHILE . Expr DO Stats END

    ID        shift, and go to state 85
    NUM       shift, and go to state 64
    NOT       shift, and go to state 69
    NEW       shift, and go to state 70
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    Expr        go to state 88
    OptionaNot  go to state 77
    Term        go to state 78


State 69

   48 OptionaNot: NOT . OptionaNot
   49           | NOT .

    NOT  shift, and go to state 69

    $default  reduce using rule 49 (OptionaNot)

    OptionaNot  go to state 89


State 70

   47 Expr: NEW . ID

    ID  shift, and go to state 90


State 71

   61 Term: THIS .

    $default  reduce using rule 61 (Term)


State 72

   62 Term: NULL_VAL . ID

    ID  shift, and go to state 91


State 73

   59 Term: '(' . Expr ')'

    ID        shift, and go to state 85
    NUM       shift, and go to state 64
    NOT       shift, and go to state 69
    NEW       shift, and go to state 70
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    Expr        go to state 92
    OptionaNot  go to state 77
    Term        go to state 78


State 74

   23 Member: METHOD ID '(' ')' Stats . END

    END  shift, and go to state 93


State 75

   32 Stats: Stat . ';' Stats

    ';'  shift, and go to state 94


State 76

   40 Stat: Expr .

    $default  reduce using rule 40 (Stat)


State 77

   42 Expr: OptionaNot . Term

    ID        shift, and go to state 85
    NUM       shift, and go to state 64
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    Term  go to state 95


State 78

   41 Expr: Term .
   43     | Term . OptionalPlusTerm
   44     | Term . OptionalMalTerm
   45     | Term . OptionalAndTerm
   46     | Term . SpecialOperation Term
   64 Term: Term . '.' ID '(' ')'
   65     | Term . '.' ID '(' ParamsExpr ')'

    AND  shift, and go to state 96
    '.'  shift, and go to state 97
    '+'  shift, and go to state 98
    '*'  shift, and go to state 99
    '-'  shift, and go to state 100
    '<'  shift, and go to state 101
    '='  shift, and go to state 102

    $default  reduce using rule 41 (Expr)

    OptionalPlusTerm  go to state 103
    OptionalMalTerm   go to state 104
    OptionalAndTerm   go to state 105
    SpecialOperation  go to state 106


State 79

   24 Member: METHOD ID '(' Pars ')' . Stats END

    ID        shift, and go to state 63
    NUM       shift, and go to state 64
    VAR       shift, and go to state 65
    RETURN    shift, and go to state 66
    IF        shift, and go to state 67
    WHILE     shift, and go to state 68
    NOT       shift, and go to state 69
    NEW       shift, and go to state 70
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    $default  reduce using rule 33 (Stats)

    Stats       go to state 107
    Stat        go to state 75
    Expr        go to state 76
    OptionaNot  go to state 77
    Term        go to state 78


State 80

   27 Pars: ParsLoop Par .
   29 ParsLoop: ParsLoop Par . ','

    ','  shift, and go to state 108

    $default  reduce using rule 27 (Pars)


State 81

   30 ParsLoop: Par ',' .

    $default  reduce using rule 30 (ParsLoop)


State 82

   31 Par: ID ':' Type .

    $default  reduce using rule 31 (Par)


State 83

   39 Stat: ID ASSIGNOP . Expr

    ID        shift, and go to state 85
    NUM       shift, and go to state 64
    NOT       shift, and go to state 69
    NEW       shift, and go to state 70
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    Expr        go to state 109
    OptionaNot  go to state 77
    Term        go to state 78


State 84

   38 Stat: VAR ID . ':' Type ASSIGNOP Expr

    ':'  shift, and go to state 110


State 85

   63 Term: ID .

    $default  reduce using rule 63 (Term)


State 86

   34 Stat: RETURN Expr .

    $default  reduce using rule 34 (Stat)


State 87

   35 Stat: IF Expr . THEN Stats END
   36     | IF Expr . THEN Stats ELSE Stats END

    THEN  shift, and go to state 111


State 88

   37 Stat: WHILE Expr . DO Stats END

    DO  shift, and go to state 112


State 89

   48 OptionaNot: NOT OptionaNot .

    $default  reduce using rule 48 (OptionaNot)


State 90

   47 Expr: NEW ID .

    $default  reduce using rule 47 (Expr)


State 91

   62 Term: NULL_VAL ID .

    $default  reduce using rule 62 (Term)


State 92

   59 Term: '(' Expr . ')'

    ')'  shift, and go to state 113


State 93

   23 Member: METHOD ID '(' ')' Stats END .

    $default  reduce using rule 23 (Member)


State 94

   32 Stats: Stat ';' . Stats

    ID        shift, and go to state 63
    NUM       shift, and go to state 64
    VAR       shift, and go to state 65
    RETURN    shift, and go to state 66
    IF        shift, and go to state 67
    WHILE     shift, and go to state 68
    NOT       shift, and go to state 69
    NEW       shift, and go to state 70
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    $default  reduce using rule 33 (Stats)

    Stats       go to state 114
    Stat        go to state 75
    Expr        go to state 76
    OptionaNot  go to state 77
    Term        go to state 78


State 95

   42 Expr: OptionaNot Term .
   64 Term: Term . '.' ID '(' ')'
   65     | Term . '.' ID '(' ParamsExpr ')'

    '.'  shift, and go to state 97

    $default  reduce using rule 42 (Expr)


State 96

   54 OptionalAndTerm: AND . Term OptionalAndTerm
   55                | AND . Term

    ID        shift, and go to state 85
    NUM       shift, and go to state 64
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    Term  go to state 115


State 97

   64 Term: Term '.' . ID '(' ')'
   65     | Term '.' . ID '(' ParamsExpr ')'

    ID  shift, and go to state 116


State 98

   50 OptionalPlusTerm: '+' . Term OptionalPlusTerm
   51                 | '+' . Term

    ID        shift, and go to state 85
    NUM       shift, and go to state 64
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    Term  go to state 117


State 99

   52 OptionalMalTerm: '*' . Term OptionalMalTerm
   53                | '*' . Term

    ID        shift, and go to state 85
    NUM       shift, and go to state 64
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    Term  go to state 118


State 100

   56 SpecialOperation: '-' .

    $default  reduce using rule 56 (SpecialOperation)


State 101

   57 SpecialOperation: '<' .

    $default  reduce using rule 57 (SpecialOperation)


State 102

   58 SpecialOperation: '=' .

    $default  reduce using rule 58 (SpecialOperation)


State 103

   43 Expr: Term OptionalPlusTerm .

    $default  reduce using rule 43 (Expr)


State 104

   44 Expr: Term OptionalMalTerm .

    $default  reduce using rule 44 (Expr)


State 105

   45 Expr: Term OptionalAndTerm .

    $default  reduce using rule 45 (Expr)


State 106

   46 Expr: Term SpecialOperation . Term

    ID        shift, and go to state 85
    NUM       shift, and go to state 64
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    Term  go to state 119


State 107

   24 Member: METHOD ID '(' Pars ')' Stats . END

    END  shift, and go to state 120


State 108

   29 ParsLoop: ParsLoop Par ',' .

    $default  reduce using rule 29 (ParsLoop)


State 109

   39 Stat: ID ASSIGNOP Expr .

    $default  reduce using rule 39 (Stat)


State 110

   38 Stat: VAR ID ':' . Type ASSIGNOP Expr

    ID   shift, and go to state 31
    INT  shift, and go to state 32

    Type  go to state 121


State 111

   35 Stat: IF Expr THEN . Stats END
   36     | IF Expr THEN . Stats ELSE Stats END

    ID        shift, and go to state 63
    NUM       shift, and go to state 64
    VAR       shift, and go to state 65
    RETURN    shift, and go to state 66
    IF        shift, and go to state 67
    WHILE     shift, and go to state 68
    NOT       shift, and go to state 69
    NEW       shift, and go to state 70
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    $default  reduce using rule 33 (Stats)

    Stats       go to state 122
    Stat        go to state 75
    Expr        go to state 76
    OptionaNot  go to state 77
    Term        go to state 78


State 112

   37 Stat: WHILE Expr DO . Stats END

    ID        shift, and go to state 63
    NUM       shift, and go to state 64
    VAR       shift, and go to state 65
    RETURN    shift, and go to state 66
    IF        shift, and go to state 67
    WHILE     shift, and go to state 68
    NOT       shift, and go to state 69
    NEW       shift, and go to state 70
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    $default  reduce using rule 33 (Stats)

    Stats       go to state 123
    Stat        go to state 75
    Expr        go to state 76
    OptionaNot  go to state 77
    Term        go to state 78


State 113

   59 Term: '(' Expr ')' .

    $default  reduce using rule 59 (Term)


State 114

   32 Stats: Stat ';' Stats .

    $default  reduce using rule 32 (Stats)


State 115

   54 OptionalAndTerm: AND Term . OptionalAndTerm
   55                | AND Term .
   64 Term: Term . '.' ID '(' ')'
   65     | Term . '.' ID '(' ParamsExpr ')'

    AND  shift, and go to state 96
    '.'  shift, and go to state 97

    $default  reduce using rule 55 (OptionalAndTerm)

    OptionalAndTerm  go to state 124


State 116

   64 Term: Term '.' ID . '(' ')'
   65     | Term '.' ID . '(' ParamsExpr ')'

    '('  shift, and go to state 125


State 117

   50 OptionalPlusTerm: '+' Term . OptionalPlusTerm
   51                 | '+' Term .
   64 Term: Term . '.' ID '(' ')'
   65     | Term . '.' ID '(' ParamsExpr ')'

    '.'  shift, and go to state 97
    '+'  shift, and go to state 98

    $default  reduce using rule 51 (OptionalPlusTerm)

    OptionalPlusTerm  go to state 126


State 118

   52 OptionalMalTerm: '*' Term . OptionalMalTerm
   53                | '*' Term .
   64 Term: Term . '.' ID '(' ')'
   65     | Term . '.' ID '(' ParamsExpr ')'

    '.'  shift, and go to state 97
    '*'  shift, and go to state 99

    $default  reduce using rule 53 (OptionalMalTerm)

    OptionalMalTerm  go to state 127


State 119

   46 Expr: Term SpecialOperation Term .
   64 Term: Term . '.' ID '(' ')'
   65     | Term . '.' ID '(' ParamsExpr ')'

    '.'  shift, and go to state 97

    $default  reduce using rule 46 (Expr)


State 120

   24 Member: METHOD ID '(' Pars ')' Stats END .

    $default  reduce using rule 24 (Member)


State 121

   38 Stat: VAR ID ':' Type . ASSIGNOP Expr

    ASSIGNOP  shift, and go to state 128


State 122

   35 Stat: IF Expr THEN Stats . END
   36     | IF Expr THEN Stats . ELSE Stats END

    ELSE  shift, and go to state 129
    END   shift, and go to state 130


State 123

   37 Stat: WHILE Expr DO Stats . END

    END  shift, and go to state 131


State 124

   54 OptionalAndTerm: AND Term OptionalAndTerm .

    $default  reduce using rule 54 (OptionalAndTerm)


State 125

   64 Term: Term '.' ID '(' . ')'
   65     | Term '.' ID '(' . ParamsExpr ')'

    ID        shift, and go to state 85
    NUM       shift, and go to state 64
    NOT       shift, and go to state 69
    NEW       shift, and go to state 70
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73
    ')'       shift, and go to state 132

    Expr            go to state 133
    OptionaNot      go to state 77
    Term            go to state 78
    ParamsExpr      go to state 134
    ParamsExprLoop  go to state 135


State 126

   50 OptionalPlusTerm: '+' Term OptionalPlusTerm .

    $default  reduce using rule 50 (OptionalPlusTerm)


State 127

   52 OptionalMalTerm: '*' Term OptionalMalTerm .

    $default  reduce using rule 52 (OptionalMalTerm)


State 128

   38 Stat: VAR ID ':' Type ASSIGNOP . Expr

    ID        shift, and go to state 85
    NUM       shift, and go to state 64
    NOT       shift, and go to state 69
    NEW       shift, and go to state 70
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    Expr        go to state 136
    OptionaNot  go to state 77
    Term        go to state 78


State 129

   36 Stat: IF Expr THEN Stats ELSE . Stats END

    ID        shift, and go to state 63
    NUM       shift, and go to state 64
    VAR       shift, and go to state 65
    RETURN    shift, and go to state 66
    IF        shift, and go to state 67
    WHILE     shift, and go to state 68
    NOT       shift, and go to state 69
    NEW       shift, and go to state 70
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    $default  reduce using rule 33 (Stats)

    Stats       go to state 137
    Stat        go to state 75
    Expr        go to state 76
    OptionaNot  go to state 77
    Term        go to state 78


State 130

   35 Stat: IF Expr THEN Stats END .

    $default  reduce using rule 35 (Stat)


State 131

   37 Stat: WHILE Expr DO Stats END .

    $default  reduce using rule 37 (Stat)


State 132

   64 Term: Term '.' ID '(' ')' .

    $default  reduce using rule 64 (Term)


State 133

   66 ParamsExpr: Expr .
   68 ParamsExprLoop: Expr . ','

    ','  shift, and go to state 138

    $default  reduce using rule 66 (ParamsExpr)


State 134

   65 Term: Term '.' ID '(' ParamsExpr . ')'

    ')'  shift, and go to state 139


State 135

   67 ParamsExpr: ParamsExprLoop . Expr
   69 ParamsExprLoop: ParamsExprLoop . Expr ','

    ID        shift, and go to state 85
    NUM       shift, and go to state 64
    NOT       shift, and go to state 69
    NEW       shift, and go to state 70
    THIS      shift, and go to state 71
    NULL_VAL  shift, and go to state 72
    '('       shift, and go to state 73

    Expr        go to state 140
    OptionaNot  go to state 77
    Term        go to state 78


State 136

   38 Stat: VAR ID ':' Type ASSIGNOP Expr .

    $default  reduce using rule 38 (Stat)


State 137

   36 Stat: IF Expr THEN Stats ELSE Stats . END

    END  shift, and go to state 141


State 138

   68 ParamsExprLoop: Expr ',' .

    $default  reduce using rule 68 (ParamsExprLoop)


State 139

   65 Term: Term '.' ID '(' ParamsExpr ')' .

    $default  reduce using rule 65 (Term)


State 140

   67 ParamsExpr: ParamsExprLoop Expr .
   69 ParamsExprLoop: ParamsExprLoop Expr . ','

    ','  shift, and go to state 142

    $default  reduce using rule 67 (ParamsExpr)


State 141

   36 Stat: IF Expr THEN Stats ELSE Stats END .

    $default  reduce using rule 36 (Stat)


State 142

   69 ParamsExprLoop: ParamsExprLoop Expr ',' .

    $default  reduce using rule 69 (ParamsExprLoop)
