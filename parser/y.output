Rules useless in parser due to conflicts

   12 TypesLoop: %empty

   25 ParsLoop: %empty


State 19 conflicts: 2 shift/reduce
State 35 conflicts: 2 shift/reduce
State 43 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce


Grammar

    0 $accept: Programm $end

    1 Programm: ProgrammStart Programm
    2         | %empty

    3 ProgrammStart: Interface ';'
    4              | Class ';'

    5 Interface: INTERFACE ID ':' AbstraktMethodsLoop END

    6 AbstraktMethodsLoop: AbstraktMethod AbstraktMethodsLoop
    7                    | %empty

    8 AbstraktMethod: ID '(' ParamTypesLoop ')' ':' Type

    9 ParamTypesLoop: TypesLoop Type
   10               | %empty

   11 TypesLoop: Type ',' TypesLoop
   12          | %empty

   13 Class: CLASS ID IMPLEMENTS ImplementsLoop ':' MemeberLoop END

   14 MemeberLoop: Member ';' MemeberLoop
   15            | %empty

   16 ImplementsLoop: ImplementsLoop ID
   17               | %empty

   18 Member: VAR ID ':' Type
   19       | METHOD ID '(' Pars ')' Stats END

   20 Type: INT
   21     | ID

   22 Pars: ParsLoop Par
   23     | %empty

   24 ParsLoop: Par ',' ParsLoop
   25         | %empty

   26 Par: ID ':' Type

   27 Stats: Stat ';' Stats
   28      | %empty

   29 Stat: RETURN Expr
   30     | IF Expr THEN Stats END
   31     | IF Expr THEN Stats ELSE Stats END
   32     | WHILE Expr DO Stats END
   33     | VAR ID ':' Type ASSIGNOP Expr
   34     | ID ASSIGNOP Expr
   35     | Expr

   36 Expr: Term
   37     | OptionaNot Term
   38     | Term OptionalPlusTerm
   39     | Term OptionalMalTerm
   40     | Term OptionalAndTerm
   41     | Term SpecialOperation Term
   42     | NEW ID

   43 OptionaNot: NOT OptionaNot
   44           | NOT

   45 OptionalPlusTerm: '+' Term OptionalPlusTerm
   46                 | '+' Term

   47 OptionalMalTerm: '*' Term OptionalMalTerm
   48                | '*' Term

   49 OptionalAndTerm: AND Term OptionalAndTerm
   50                | AND Term

   51 SpecialOperation: '-'
   52                 | '<'
   53                 | '='

   54 Term: '(' Expr ')'
   55     | NUM
   56     | THIS
   57     | NULL_VAL ID
   58     | ID
   59     | Term '.' ID '(' ')'
   60     | Term '.' ID '(' ParamsExpr ')'

   61 ParamsExpr: Expr
   62           | ParamsExprLoop Expr

   63 ParamsExprLoop: Expr ','
   64               | ParamsExprLoop Expr ','


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 19 54 59 60
')' (41) 8 19 54 59 60
'*' (42) 47 48
'+' (43) 45 46
',' (44) 11 24 63 64
'-' (45) 51
'.' (46) 59 60
':' (58) 5 8 13 18 26 33
';' (59) 3 4 14 27
'<' (60) 52
'=' (61) 53
error (256)
ID (258) 5 8 13 16 18 19 21 26 33 34 42 57 58 59 60
NUM (259) 55
INTERFACE (260) 5
CLASS (261) 13
IMPLEMENTS (262) 13
VAR (263) 18 33
METHOD (264) 19
INT (265) 20
RETURN (266) 29
IF (267) 30 31
THEN (268) 30 31
ELSE (269) 31
WHILE (270) 32
DO (271) 32
NOT (272) 43 44
AND (273) 49 50
NEW (274) 42
THIS (275) 56
NULL_VAL (276) 57
END (277) 5 13 19 30 31 32
ASSIGNOP (278) 33 34


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
Programm (36)
    on left: 1 2, on right: 0 1
ProgrammStart (37)
    on left: 3 4, on right: 1
Interface (38)
    on left: 5, on right: 3
AbstraktMethodsLoop (39)
    on left: 6 7, on right: 5 6
AbstraktMethod (40)
    on left: 8, on right: 6
ParamTypesLoop (41)
    on left: 9 10, on right: 8
TypesLoop (42)
    on left: 11 12, on right: 9 11
Class (43)
    on left: 13, on right: 4
MemeberLoop (44)
    on left: 14 15, on right: 13 14
ImplementsLoop (45)
    on left: 16 17, on right: 13 16
Member (46)
    on left: 18 19, on right: 14
Type (47)
    on left: 20 21, on right: 8 9 11 18 26 33
Pars (48)
    on left: 22 23, on right: 19
ParsLoop (49)
    on left: 24 25, on right: 22 24
Par (50)
    on left: 26, on right: 22 24
Stats (51)
    on left: 27 28, on right: 19 27 30 31 32
Stat (52)
    on left: 29 30 31 32 33 34 35, on right: 27
Expr (53)
    on left: 36 37 38 39 40 41 42, on right: 29 30 31 32 33 34 35 54
    61 62 63 64
OptionaNot (54)
    on left: 43 44, on right: 37 43
OptionalPlusTerm (55)
    on left: 45 46, on right: 38 45
OptionalMalTerm (56)
    on left: 47 48, on right: 39 47
OptionalAndTerm (57)
    on left: 49 50, on right: 40 49
SpecialOperation (58)
    on left: 51 52 53, on right: 41
Term (59)
    on left: 54 55 56 57 58 59 60, on right: 36 37 38 39 40 41 45 46
    47 48 49 50 59 60
ParamsExpr (60)
    on left: 61 62, on right: 60
ParamsExprLoop (61)
    on left: 63 64, on right: 62 64


State 0

    0 $accept: . Programm $end

    INTERFACE  shift, and go to state 1
    CLASS      shift, and go to state 2

    $default  reduce using rule 2 (Programm)

    Programm       go to state 3
    ProgrammStart  go to state 4
    Interface      go to state 5
    Class          go to state 6


State 1

    5 Interface: INTERFACE . ID ':' AbstraktMethodsLoop END

    ID  shift, and go to state 7


State 2

   13 Class: CLASS . ID IMPLEMENTS ImplementsLoop ':' MemeberLoop END

    ID  shift, and go to state 8


State 3

    0 $accept: Programm . $end

    $end  shift, and go to state 9


State 4

    1 Programm: ProgrammStart . Programm

    INTERFACE  shift, and go to state 1
    CLASS      shift, and go to state 2

    $default  reduce using rule 2 (Programm)

    Programm       go to state 10
    ProgrammStart  go to state 4
    Interface      go to state 5
    Class          go to state 6


State 5

    3 ProgrammStart: Interface . ';'

    ';'  shift, and go to state 11


State 6

    4 ProgrammStart: Class . ';'

    ';'  shift, and go to state 12


State 7

    5 Interface: INTERFACE ID . ':' AbstraktMethodsLoop END

    ':'  shift, and go to state 13


State 8

   13 Class: CLASS ID . IMPLEMENTS ImplementsLoop ':' MemeberLoop END

    IMPLEMENTS  shift, and go to state 14


State 9

    0 $accept: Programm $end .

    $default  accept


State 10

    1 Programm: ProgrammStart Programm .

    $default  reduce using rule 1 (Programm)


State 11

    3 ProgrammStart: Interface ';' .

    $default  reduce using rule 3 (ProgrammStart)


State 12

    4 ProgrammStart: Class ';' .

    $default  reduce using rule 4 (ProgrammStart)


State 13

    5 Interface: INTERFACE ID ':' . AbstraktMethodsLoop END

    ID  shift, and go to state 15

    $default  reduce using rule 7 (AbstraktMethodsLoop)

    AbstraktMethodsLoop  go to state 16
    AbstraktMethod       go to state 17


State 14

   13 Class: CLASS ID IMPLEMENTS . ImplementsLoop ':' MemeberLoop END

    $default  reduce using rule 17 (ImplementsLoop)

    ImplementsLoop  go to state 18


State 15

    8 AbstraktMethod: ID . '(' ParamTypesLoop ')' ':' Type

    '('  shift, and go to state 19


State 16

    5 Interface: INTERFACE ID ':' AbstraktMethodsLoop . END

    END  shift, and go to state 20


State 17

    6 AbstraktMethodsLoop: AbstraktMethod . AbstraktMethodsLoop

    ID  shift, and go to state 15

    $default  reduce using rule 7 (AbstraktMethodsLoop)

    AbstraktMethodsLoop  go to state 21
    AbstraktMethod       go to state 17


State 18

   13 Class: CLASS ID IMPLEMENTS ImplementsLoop . ':' MemeberLoop END
   16 ImplementsLoop: ImplementsLoop . ID

    ID   shift, and go to state 22
    ':'  shift, and go to state 23


State 19

    8 AbstraktMethod: ID '(' . ParamTypesLoop ')' ':' Type

    ID   shift, and go to state 24
    INT  shift, and go to state 25

    ID        [reduce using rule 12 (TypesLoop)]
    INT       [reduce using rule 12 (TypesLoop)]
    $default  reduce using rule 10 (ParamTypesLoop)

    ParamTypesLoop  go to state 26
    TypesLoop       go to state 27
    Type            go to state 28


State 20

    5 Interface: INTERFACE ID ':' AbstraktMethodsLoop END .

    $default  reduce using rule 5 (Interface)


State 21

    6 AbstraktMethodsLoop: AbstraktMethod AbstraktMethodsLoop .

    $default  reduce using rule 6 (AbstraktMethodsLoop)


State 22

   16 ImplementsLoop: ImplementsLoop ID .

    $default  reduce using rule 16 (ImplementsLoop)


State 23

   13 Class: CLASS ID IMPLEMENTS ImplementsLoop ':' . MemeberLoop END

    VAR     shift, and go to state 29
    METHOD  shift, and go to state 30

    $default  reduce using rule 15 (MemeberLoop)

    MemeberLoop  go to state 31
    Member       go to state 32


State 24

   21 Type: ID .

    $default  reduce using rule 21 (Type)


State 25

   20 Type: INT .

    $default  reduce using rule 20 (Type)


State 26

    8 AbstraktMethod: ID '(' ParamTypesLoop . ')' ':' Type

    ')'  shift, and go to state 33


State 27

    9 ParamTypesLoop: TypesLoop . Type

    ID   shift, and go to state 24
    INT  shift, and go to state 25

    Type  go to state 34


State 28

   11 TypesLoop: Type . ',' TypesLoop

    ','  shift, and go to state 35


State 29

   18 Member: VAR . ID ':' Type

    ID  shift, and go to state 36


State 30

   19 Member: METHOD . ID '(' Pars ')' Stats END

    ID  shift, and go to state 37


State 31

   13 Class: CLASS ID IMPLEMENTS ImplementsLoop ':' MemeberLoop . END

    END  shift, and go to state 38


State 32

   14 MemeberLoop: Member . ';' MemeberLoop

    ';'  shift, and go to state 39


State 33

    8 AbstraktMethod: ID '(' ParamTypesLoop ')' . ':' Type

    ':'  shift, and go to state 40


State 34

    9 ParamTypesLoop: TypesLoop Type .

    $default  reduce using rule 9 (ParamTypesLoop)


State 35

   11 TypesLoop: Type ',' . TypesLoop

    ID   shift, and go to state 24
    INT  shift, and go to state 25

    ID   [reduce using rule 12 (TypesLoop)]
    INT  [reduce using rule 12 (TypesLoop)]

    TypesLoop  go to state 41
    Type       go to state 28


State 36

   18 Member: VAR ID . ':' Type

    ':'  shift, and go to state 42


State 37

   19 Member: METHOD ID . '(' Pars ')' Stats END

    '('  shift, and go to state 43


State 38

   13 Class: CLASS ID IMPLEMENTS ImplementsLoop ':' MemeberLoop END .

    $default  reduce using rule 13 (Class)


State 39

   14 MemeberLoop: Member ';' . MemeberLoop

    VAR     shift, and go to state 29
    METHOD  shift, and go to state 30

    $default  reduce using rule 15 (MemeberLoop)

    MemeberLoop  go to state 44
    Member       go to state 32


State 40

    8 AbstraktMethod: ID '(' ParamTypesLoop ')' ':' . Type

    ID   shift, and go to state 24
    INT  shift, and go to state 25

    Type  go to state 45


State 41

   11 TypesLoop: Type ',' TypesLoop .

    $default  reduce using rule 11 (TypesLoop)


State 42

   18 Member: VAR ID ':' . Type

    ID   shift, and go to state 24
    INT  shift, and go to state 25

    Type  go to state 46


State 43

   19 Member: METHOD ID '(' . Pars ')' Stats END

    ID  shift, and go to state 47

    ID        [reduce using rule 25 (ParsLoop)]
    $default  reduce using rule 23 (Pars)

    Pars      go to state 48
    ParsLoop  go to state 49
    Par       go to state 50


State 44

   14 MemeberLoop: Member ';' MemeberLoop .

    $default  reduce using rule 14 (MemeberLoop)


State 45

    8 AbstraktMethod: ID '(' ParamTypesLoop ')' ':' Type .

    $default  reduce using rule 8 (AbstraktMethod)


State 46

   18 Member: VAR ID ':' Type .

    $default  reduce using rule 18 (Member)


State 47

   26 Par: ID . ':' Type

    ':'  shift, and go to state 51


State 48

   19 Member: METHOD ID '(' Pars . ')' Stats END

    ')'  shift, and go to state 52


State 49

   22 Pars: ParsLoop . Par

    ID  shift, and go to state 47

    Par  go to state 53


State 50

   24 ParsLoop: Par . ',' ParsLoop

    ','  shift, and go to state 54


State 51

   26 Par: ID ':' . Type

    ID   shift, and go to state 24
    INT  shift, and go to state 25

    Type  go to state 55


State 52

   19 Member: METHOD ID '(' Pars ')' . Stats END

    ID        shift, and go to state 56
    NUM       shift, and go to state 57
    VAR       shift, and go to state 58
    RETURN    shift, and go to state 59
    IF        shift, and go to state 60
    WHILE     shift, and go to state 61
    NOT       shift, and go to state 62
    NEW       shift, and go to state 63
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    $default  reduce using rule 28 (Stats)

    Stats       go to state 67
    Stat        go to state 68
    Expr        go to state 69
    OptionaNot  go to state 70
    Term        go to state 71


State 53

   22 Pars: ParsLoop Par .

    $default  reduce using rule 22 (Pars)


State 54

   24 ParsLoop: Par ',' . ParsLoop

    ID  shift, and go to state 47

    ID  [reduce using rule 25 (ParsLoop)]

    ParsLoop  go to state 72
    Par       go to state 50


State 55

   26 Par: ID ':' Type .

    $default  reduce using rule 26 (Par)


State 56

   34 Stat: ID . ASSIGNOP Expr
   58 Term: ID .

    ASSIGNOP  shift, and go to state 73

    $default  reduce using rule 58 (Term)


State 57

   55 Term: NUM .

    $default  reduce using rule 55 (Term)


State 58

   33 Stat: VAR . ID ':' Type ASSIGNOP Expr

    ID  shift, and go to state 74


State 59

   29 Stat: RETURN . Expr

    ID        shift, and go to state 75
    NUM       shift, and go to state 57
    NOT       shift, and go to state 62
    NEW       shift, and go to state 63
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    Expr        go to state 76
    OptionaNot  go to state 70
    Term        go to state 71


State 60

   30 Stat: IF . Expr THEN Stats END
   31     | IF . Expr THEN Stats ELSE Stats END

    ID        shift, and go to state 75
    NUM       shift, and go to state 57
    NOT       shift, and go to state 62
    NEW       shift, and go to state 63
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    Expr        go to state 77
    OptionaNot  go to state 70
    Term        go to state 71


State 61

   32 Stat: WHILE . Expr DO Stats END

    ID        shift, and go to state 75
    NUM       shift, and go to state 57
    NOT       shift, and go to state 62
    NEW       shift, and go to state 63
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    Expr        go to state 78
    OptionaNot  go to state 70
    Term        go to state 71


State 62

   43 OptionaNot: NOT . OptionaNot
   44           | NOT .

    NOT  shift, and go to state 62

    $default  reduce using rule 44 (OptionaNot)

    OptionaNot  go to state 79


State 63

   42 Expr: NEW . ID

    ID  shift, and go to state 80


State 64

   56 Term: THIS .

    $default  reduce using rule 56 (Term)


State 65

   57 Term: NULL_VAL . ID

    ID  shift, and go to state 81


State 66

   54 Term: '(' . Expr ')'

    ID        shift, and go to state 75
    NUM       shift, and go to state 57
    NOT       shift, and go to state 62
    NEW       shift, and go to state 63
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    Expr        go to state 82
    OptionaNot  go to state 70
    Term        go to state 71


State 67

   19 Member: METHOD ID '(' Pars ')' Stats . END

    END  shift, and go to state 83


State 68

   27 Stats: Stat . ';' Stats

    ';'  shift, and go to state 84


State 69

   35 Stat: Expr .

    $default  reduce using rule 35 (Stat)


State 70

   37 Expr: OptionaNot . Term

    ID        shift, and go to state 75
    NUM       shift, and go to state 57
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    Term  go to state 85


State 71

   36 Expr: Term .
   38     | Term . OptionalPlusTerm
   39     | Term . OptionalMalTerm
   40     | Term . OptionalAndTerm
   41     | Term . SpecialOperation Term
   59 Term: Term . '.' ID '(' ')'
   60     | Term . '.' ID '(' ParamsExpr ')'

    AND  shift, and go to state 86
    '.'  shift, and go to state 87
    '+'  shift, and go to state 88
    '*'  shift, and go to state 89
    '-'  shift, and go to state 90
    '<'  shift, and go to state 91
    '='  shift, and go to state 92

    $default  reduce using rule 36 (Expr)

    OptionalPlusTerm  go to state 93
    OptionalMalTerm   go to state 94
    OptionalAndTerm   go to state 95
    SpecialOperation  go to state 96


State 72

   24 ParsLoop: Par ',' ParsLoop .

    $default  reduce using rule 24 (ParsLoop)


State 73

   34 Stat: ID ASSIGNOP . Expr

    ID        shift, and go to state 75
    NUM       shift, and go to state 57
    NOT       shift, and go to state 62
    NEW       shift, and go to state 63
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    Expr        go to state 97
    OptionaNot  go to state 70
    Term        go to state 71


State 74

   33 Stat: VAR ID . ':' Type ASSIGNOP Expr

    ':'  shift, and go to state 98


State 75

   58 Term: ID .

    $default  reduce using rule 58 (Term)


State 76

   29 Stat: RETURN Expr .

    $default  reduce using rule 29 (Stat)


State 77

   30 Stat: IF Expr . THEN Stats END
   31     | IF Expr . THEN Stats ELSE Stats END

    THEN  shift, and go to state 99


State 78

   32 Stat: WHILE Expr . DO Stats END

    DO  shift, and go to state 100


State 79

   43 OptionaNot: NOT OptionaNot .

    $default  reduce using rule 43 (OptionaNot)


State 80

   42 Expr: NEW ID .

    $default  reduce using rule 42 (Expr)


State 81

   57 Term: NULL_VAL ID .

    $default  reduce using rule 57 (Term)


State 82

   54 Term: '(' Expr . ')'

    ')'  shift, and go to state 101


State 83

   19 Member: METHOD ID '(' Pars ')' Stats END .

    $default  reduce using rule 19 (Member)


State 84

   27 Stats: Stat ';' . Stats

    ID        shift, and go to state 56
    NUM       shift, and go to state 57
    VAR       shift, and go to state 58
    RETURN    shift, and go to state 59
    IF        shift, and go to state 60
    WHILE     shift, and go to state 61
    NOT       shift, and go to state 62
    NEW       shift, and go to state 63
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    $default  reduce using rule 28 (Stats)

    Stats       go to state 102
    Stat        go to state 68
    Expr        go to state 69
    OptionaNot  go to state 70
    Term        go to state 71


State 85

   37 Expr: OptionaNot Term .
   59 Term: Term . '.' ID '(' ')'
   60     | Term . '.' ID '(' ParamsExpr ')'

    '.'  shift, and go to state 87

    $default  reduce using rule 37 (Expr)


State 86

   49 OptionalAndTerm: AND . Term OptionalAndTerm
   50                | AND . Term

    ID        shift, and go to state 75
    NUM       shift, and go to state 57
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    Term  go to state 103


State 87

   59 Term: Term '.' . ID '(' ')'
   60     | Term '.' . ID '(' ParamsExpr ')'

    ID  shift, and go to state 104


State 88

   45 OptionalPlusTerm: '+' . Term OptionalPlusTerm
   46                 | '+' . Term

    ID        shift, and go to state 75
    NUM       shift, and go to state 57
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    Term  go to state 105


State 89

   47 OptionalMalTerm: '*' . Term OptionalMalTerm
   48                | '*' . Term

    ID        shift, and go to state 75
    NUM       shift, and go to state 57
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    Term  go to state 106


State 90

   51 SpecialOperation: '-' .

    $default  reduce using rule 51 (SpecialOperation)


State 91

   52 SpecialOperation: '<' .

    $default  reduce using rule 52 (SpecialOperation)


State 92

   53 SpecialOperation: '=' .

    $default  reduce using rule 53 (SpecialOperation)


State 93

   38 Expr: Term OptionalPlusTerm .

    $default  reduce using rule 38 (Expr)


State 94

   39 Expr: Term OptionalMalTerm .

    $default  reduce using rule 39 (Expr)


State 95

   40 Expr: Term OptionalAndTerm .

    $default  reduce using rule 40 (Expr)


State 96

   41 Expr: Term SpecialOperation . Term

    ID        shift, and go to state 75
    NUM       shift, and go to state 57
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    Term  go to state 107


State 97

   34 Stat: ID ASSIGNOP Expr .

    $default  reduce using rule 34 (Stat)


State 98

   33 Stat: VAR ID ':' . Type ASSIGNOP Expr

    ID   shift, and go to state 24
    INT  shift, and go to state 25

    Type  go to state 108


State 99

   30 Stat: IF Expr THEN . Stats END
   31     | IF Expr THEN . Stats ELSE Stats END

    ID        shift, and go to state 56
    NUM       shift, and go to state 57
    VAR       shift, and go to state 58
    RETURN    shift, and go to state 59
    IF        shift, and go to state 60
    WHILE     shift, and go to state 61
    NOT       shift, and go to state 62
    NEW       shift, and go to state 63
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    $default  reduce using rule 28 (Stats)

    Stats       go to state 109
    Stat        go to state 68
    Expr        go to state 69
    OptionaNot  go to state 70
    Term        go to state 71


State 100

   32 Stat: WHILE Expr DO . Stats END

    ID        shift, and go to state 56
    NUM       shift, and go to state 57
    VAR       shift, and go to state 58
    RETURN    shift, and go to state 59
    IF        shift, and go to state 60
    WHILE     shift, and go to state 61
    NOT       shift, and go to state 62
    NEW       shift, and go to state 63
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    $default  reduce using rule 28 (Stats)

    Stats       go to state 110
    Stat        go to state 68
    Expr        go to state 69
    OptionaNot  go to state 70
    Term        go to state 71


State 101

   54 Term: '(' Expr ')' .

    $default  reduce using rule 54 (Term)


State 102

   27 Stats: Stat ';' Stats .

    $default  reduce using rule 27 (Stats)


State 103

   49 OptionalAndTerm: AND Term . OptionalAndTerm
   50                | AND Term .
   59 Term: Term . '.' ID '(' ')'
   60     | Term . '.' ID '(' ParamsExpr ')'

    AND  shift, and go to state 86
    '.'  shift, and go to state 87

    $default  reduce using rule 50 (OptionalAndTerm)

    OptionalAndTerm  go to state 111


State 104

   59 Term: Term '.' ID . '(' ')'
   60     | Term '.' ID . '(' ParamsExpr ')'

    '('  shift, and go to state 112


State 105

   45 OptionalPlusTerm: '+' Term . OptionalPlusTerm
   46                 | '+' Term .
   59 Term: Term . '.' ID '(' ')'
   60     | Term . '.' ID '(' ParamsExpr ')'

    '.'  shift, and go to state 87
    '+'  shift, and go to state 88

    $default  reduce using rule 46 (OptionalPlusTerm)

    OptionalPlusTerm  go to state 113


State 106

   47 OptionalMalTerm: '*' Term . OptionalMalTerm
   48                | '*' Term .
   59 Term: Term . '.' ID '(' ')'
   60     | Term . '.' ID '(' ParamsExpr ')'

    '.'  shift, and go to state 87
    '*'  shift, and go to state 89

    $default  reduce using rule 48 (OptionalMalTerm)

    OptionalMalTerm  go to state 114


State 107

   41 Expr: Term SpecialOperation Term .
   59 Term: Term . '.' ID '(' ')'
   60     | Term . '.' ID '(' ParamsExpr ')'

    '.'  shift, and go to state 87

    $default  reduce using rule 41 (Expr)


State 108

   33 Stat: VAR ID ':' Type . ASSIGNOP Expr

    ASSIGNOP  shift, and go to state 115


State 109

   30 Stat: IF Expr THEN Stats . END
   31     | IF Expr THEN Stats . ELSE Stats END

    ELSE  shift, and go to state 116
    END   shift, and go to state 117


State 110

   32 Stat: WHILE Expr DO Stats . END

    END  shift, and go to state 118


State 111

   49 OptionalAndTerm: AND Term OptionalAndTerm .

    $default  reduce using rule 49 (OptionalAndTerm)


State 112

   59 Term: Term '.' ID '(' . ')'
   60     | Term '.' ID '(' . ParamsExpr ')'

    ID        shift, and go to state 75
    NUM       shift, and go to state 57
    NOT       shift, and go to state 62
    NEW       shift, and go to state 63
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66
    ')'       shift, and go to state 119

    Expr            go to state 120
    OptionaNot      go to state 70
    Term            go to state 71
    ParamsExpr      go to state 121
    ParamsExprLoop  go to state 122


State 113

   45 OptionalPlusTerm: '+' Term OptionalPlusTerm .

    $default  reduce using rule 45 (OptionalPlusTerm)


State 114

   47 OptionalMalTerm: '*' Term OptionalMalTerm .

    $default  reduce using rule 47 (OptionalMalTerm)


State 115

   33 Stat: VAR ID ':' Type ASSIGNOP . Expr

    ID        shift, and go to state 75
    NUM       shift, and go to state 57
    NOT       shift, and go to state 62
    NEW       shift, and go to state 63
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    Expr        go to state 123
    OptionaNot  go to state 70
    Term        go to state 71


State 116

   31 Stat: IF Expr THEN Stats ELSE . Stats END

    ID        shift, and go to state 56
    NUM       shift, and go to state 57
    VAR       shift, and go to state 58
    RETURN    shift, and go to state 59
    IF        shift, and go to state 60
    WHILE     shift, and go to state 61
    NOT       shift, and go to state 62
    NEW       shift, and go to state 63
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    $default  reduce using rule 28 (Stats)

    Stats       go to state 124
    Stat        go to state 68
    Expr        go to state 69
    OptionaNot  go to state 70
    Term        go to state 71


State 117

   30 Stat: IF Expr THEN Stats END .

    $default  reduce using rule 30 (Stat)


State 118

   32 Stat: WHILE Expr DO Stats END .

    $default  reduce using rule 32 (Stat)


State 119

   59 Term: Term '.' ID '(' ')' .

    $default  reduce using rule 59 (Term)


State 120

   61 ParamsExpr: Expr .
   63 ParamsExprLoop: Expr . ','

    ','  shift, and go to state 125

    $default  reduce using rule 61 (ParamsExpr)


State 121

   60 Term: Term '.' ID '(' ParamsExpr . ')'

    ')'  shift, and go to state 126


State 122

   62 ParamsExpr: ParamsExprLoop . Expr
   64 ParamsExprLoop: ParamsExprLoop . Expr ','

    ID        shift, and go to state 75
    NUM       shift, and go to state 57
    NOT       shift, and go to state 62
    NEW       shift, and go to state 63
    THIS      shift, and go to state 64
    NULL_VAL  shift, and go to state 65
    '('       shift, and go to state 66

    Expr        go to state 127
    OptionaNot  go to state 70
    Term        go to state 71


State 123

   33 Stat: VAR ID ':' Type ASSIGNOP Expr .

    $default  reduce using rule 33 (Stat)


State 124

   31 Stat: IF Expr THEN Stats ELSE Stats . END

    END  shift, and go to state 128


State 125

   63 ParamsExprLoop: Expr ',' .

    $default  reduce using rule 63 (ParamsExprLoop)


State 126

   60 Term: Term '.' ID '(' ParamsExpr ')' .

    $default  reduce using rule 60 (Term)


State 127

   62 ParamsExpr: ParamsExprLoop Expr .
   64 ParamsExprLoop: ParamsExprLoop Expr . ','

    ','  shift, and go to state 129

    $default  reduce using rule 62 (ParamsExpr)


State 128

   31 Stat: IF Expr THEN Stats ELSE Stats END .

    $default  reduce using rule 31 (Stat)


State 129

   64 ParamsExprLoop: ParamsExprLoop Expr ',' .

    $default  reduce using rule 64 (ParamsExprLoop)
