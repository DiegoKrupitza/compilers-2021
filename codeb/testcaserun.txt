Teste "make clean"
rm -f codea codegen.c *.o oxout.* lex.yy.c y.tab.* y.output parser
codeb: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=c09571db00524a32c04156b78dffd6f96c5c4fd8, not stripped
codeb is object or executable
Teste "make"
ox parser.y scanner.l
ox: parser.y: warning: line 198: implicit dependent depends on itself
ox: parser.y: warning: line 206: implicit dependent depends on itself
flex oxout.l
yacc -d -v oxout.y
gcc -c lex.yy.c  
gcc -c y.tab.c	
gcc -g -c -pedantic -Wall list.c
gcc -g -c -pedantic -Wall implemented_meth_list.c
gcc -g -c -pedantic -Wall tree.c
gcc -g -c -pedantic -Wall code_generator.c
bfe < codegen.bfe | iburg > codegen.c
gcc -g -c -pedantic -Wall codegen.c
gcc -g list.o tree.o codegen.o implemented_meth_list.o code_generator.o y.tab.o lex.yy.o -ll -o codeb
==========> Eingabe von /usr/ftp/pub/ubvl/test/codeb/a0.0:
interface i: f(int):int end;
class c implements i:
 method f(x:int) return x; end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

          PARAM: x
=======================================

.globl c
c:   
.quad c_f


c_f:
	movq	%rsi, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: no such instruction: `x'
testcodebout18199.s:6: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-0.0:
interface i: f(int):int end;
class c implements i:
 method f(x:int) return x + 3; end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

                    3 

          +

                    PARAM: x
=======================================

.globl c
c:   
.quad c_f


c_f:
	movq	%rsi, %rax
	addq	$3, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: junk at end of line, first unrecognized character is `3'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:9: Error: no such instruction: `x'
testcodebout18199.s:10: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-1.0:
interface i: f(int):int end;
class c implements i:
 method f(x:int) return x - 3; end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

                    3 

          -

                    PARAM: x
=======================================

.globl c
c:   
.quad c_f


c_f:
	movq	%rsi, %rax
	subq	$3, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: junk at end of line, first unrecognized character is `3'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:9: Error: no such instruction: `x'
testcodebout18199.s:10: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-10.0:
interface i: 
    f(int,int):int 
end;
class c implements i:
    var kingD : int;
    var giveMe : int;

    method f(x:int,y:int) 
        return (kingD * x) + giveMe + 60; 
    end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

                              60 

                    +

                              CVAR: giveMe

          +

                              PARAM: x

                    *

                              CVAR: kingD
=======================================

.globl c
c:   
.quad c_f


c_f:
	movq	8(%rdi), %rax
	movq	%rsi, %r11
	imulq	%r11, %rax
	movq	16(%rdi), %r11
	addq	$60, %r11
	addq	%r11, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: junk at end of line, first unrecognized character is `6'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:9: Error: no such instruction: `giveme'
testcodebout18199.s:11: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:13: Error: no such instruction: `x'
testcodebout18199.s:15: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:17: Error: no such instruction: `kingd'
testcodebout18199.s:18: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-11.0:
interface i: 
    f(int):int 
    g(int):int 
    h(int,int):int 
    j(int,int):int 
end;
class c implements i:
    method f(x:int) 
        return x < 3; 
    end;
    method g(x:int) 
        return 3 < x; 
    end;
    method h(x:int,y:int) 
        return y < x; 
    end;
    method j(x:int,y:int) 
        return x < y; 
    end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

                    3 

          <

                    PARAM: x
=======================================
=======================================

RET

                    PARAM: x

          <

                    3 
=======================================
=======================================

RET

                    PARAM: x

          <

                    PARAM: y
=======================================
=======================================

RET

                    PARAM: y

          <

                    PARAM: x
=======================================

.globl c
c:   
.quad c_f
.quad c_g
.quad c_h
.quad c_j


c_f:
	movq	%rsi, %rax
	cmpq	$3, %rax	# checking if 3 less rax (inverted because right const not allwoed) 
	setl	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret
c_g:
	movq	%rsi, %r11
	cmpq	$3, %r11	# checking if 3 less r11
	setg	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret
c_h:
	movq	%rdx, %rax
	movq	%rsi, %r11
	cmpq	%rax, %r11	# checking if rax less r11
	setg	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret
c_j:
	movq	%rsi, %rax
	movq	%rdx, %r11
	cmpq	%rax, %r11	# checking if rax less r11
	setg	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: junk at end of line, first unrecognized character is `3'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:9: Error: no such instruction: `x'
testcodebout18199.s:10: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:11: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:15: Error: symbol `PARAM' is already defined
testcodebout18199.s:15: Error: no such instruction: `x'
testcodebout18199.s:17: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:19: Error: junk at end of line, first unrecognized character is `3'
testcodebout18199.s:20: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:21: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:25: Error: symbol `PARAM' is already defined
testcodebout18199.s:25: Error: no such instruction: `x'
testcodebout18199.s:27: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:29: Error: symbol `PARAM' is already defined
testcodebout18199.s:29: Error: no such instruction: `y'
testcodebout18199.s:30: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:31: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:35: Error: symbol `PARAM' is already defined
testcodebout18199.s:35: Error: no such instruction: `y'
testcodebout18199.s:37: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:39: Error: symbol `PARAM' is already defined
testcodebout18199.s:39: Error: no such instruction: `x'
testcodebout18199.s:40: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-12.0:
interface i: 
    g(int):int 
end;
class c implements i:
    method g(x:int) 
        return 3 < x; 
    end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

                    PARAM: x

          <

                    3 
=======================================

.globl c
c:   
.quad c_g


c_g:
	movq	%rsi, %r11
	cmpq	$3, %r11	# checking if 3 less r11
	setg	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: no such instruction: `x'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:9: Error: junk at end of line, first unrecognized character is `3'
testcodebout18199.s:10: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-13.0:
interface i: 
    f(int):int 
    g(int):int 
    h(int,int):int 
    j(int,int):int 
end;
class c implements i:
    method f(x:int) 
        return x < 3; 
    end;
    method g(x:int) 
        return 3 < x; 
    end;
    method h(x:int,y:int) 
        return y < x; 
    end;
    method j(x:int,y:int) 
        return x < y; 
    end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

                    3 

          <

                    PARAM: x
=======================================
=======================================

RET

                    PARAM: x

          <

                    3 
=======================================
=======================================

RET

                    PARAM: x

          <

                    PARAM: y
=======================================
=======================================

RET

                    PARAM: y

          <

                    PARAM: x
=======================================

.globl c
c:   
.quad c_f
.quad c_g
.quad c_h
.quad c_j


c_f:
	movq	%rsi, %rax
	cmpq	$3, %rax	# checking if 3 less rax (inverted because right const not allwoed) 
	setl	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret
c_g:
	movq	%rsi, %r11
	cmpq	$3, %r11	# checking if 3 less r11
	setg	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret
c_h:
	movq	%rdx, %rax
	movq	%rsi, %r11
	cmpq	%rax, %r11	# checking if rax less r11
	setg	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret
c_j:
	movq	%rsi, %rax
	movq	%rdx, %r11
	cmpq	%rax, %r11	# checking if rax less r11
	setg	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: junk at end of line, first unrecognized character is `3'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:9: Error: no such instruction: `x'
testcodebout18199.s:10: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:11: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:15: Error: symbol `PARAM' is already defined
testcodebout18199.s:15: Error: no such instruction: `x'
testcodebout18199.s:17: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:19: Error: junk at end of line, first unrecognized character is `3'
testcodebout18199.s:20: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:21: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:25: Error: symbol `PARAM' is already defined
testcodebout18199.s:25: Error: no such instruction: `x'
testcodebout18199.s:27: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:29: Error: symbol `PARAM' is already defined
testcodebout18199.s:29: Error: no such instruction: `y'
testcodebout18199.s:30: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:31: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:35: Error: symbol `PARAM' is already defined
testcodebout18199.s:35: Error: no such instruction: `y'
testcodebout18199.s:37: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:39: Error: symbol `PARAM' is already defined
testcodebout18199.s:39: Error: no such instruction: `x'
testcodebout18199.s:40: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-14.0:
interface i: 
    j(int,int):int 
end;
class c implements i:
    method j(x:int,y:int) 
        return x < y; 
    end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

                    PARAM: y

          <

                    PARAM: x
=======================================

.globl c
c:   
.quad c_j


c_j:
	movq	%rsi, %rax
	movq	%rdx, %r11
	cmpq	%rax, %r11	# checking if rax less r11
	setg	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: no such instruction: `y'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:9: Error: no such instruction: `x'
testcodebout18199.s:10: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-15.0:
interface i: 
    f(int):int 
    g(int):int 
    h(int,int):int 
    j(int,int):int 
end;
class c implements i:
    method f(x:int) 
        return x < 3; 
    end;
    method g(x:int) 
        return 3 < x; 
    end;
    method h(x:int,y:int) 
        return y < x; 
    end;
    method j(x:int,y:int) 
        return x < y; 
    end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

                    3 

          <

                    PARAM: x
=======================================
=======================================

RET

                    PARAM: x

          <

                    3 
=======================================
=======================================

RET

                    PARAM: x

          <

                    PARAM: y
=======================================
=======================================

RET

                    PARAM: y

          <

                    PARAM: x
=======================================

.globl c
c:   
.quad c_f
.quad c_g
.quad c_h
.quad c_j


c_f:
	movq	%rsi, %rax
	cmpq	$3, %rax	# checking if 3 less rax (inverted because right const not allwoed) 
	setl	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret
c_g:
	movq	%rsi, %r11
	cmpq	$3, %r11	# checking if 3 less r11
	setg	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret
c_h:
	movq	%rdx, %rax
	movq	%rsi, %r11
	cmpq	%rax, %r11	# checking if rax less r11
	setg	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret
c_j:
	movq	%rsi, %rax
	movq	%rdx, %r11
	cmpq	%rax, %r11	# checking if rax less r11
	setg	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: junk at end of line, first unrecognized character is `3'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:9: Error: no such instruction: `x'
testcodebout18199.s:10: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:11: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:15: Error: symbol `PARAM' is already defined
testcodebout18199.s:15: Error: no such instruction: `x'
testcodebout18199.s:17: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:19: Error: junk at end of line, first unrecognized character is `3'
testcodebout18199.s:20: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:21: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:25: Error: symbol `PARAM' is already defined
testcodebout18199.s:25: Error: no such instruction: `x'
testcodebout18199.s:27: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:29: Error: symbol `PARAM' is already defined
testcodebout18199.s:29: Error: no such instruction: `y'
testcodebout18199.s:30: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:31: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:35: Error: symbol `PARAM' is already defined
testcodebout18199.s:35: Error: no such instruction: `y'
testcodebout18199.s:37: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:39: Error: symbol `PARAM' is already defined
testcodebout18199.s:39: Error: no such instruction: `x'
testcodebout18199.s:40: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-2.0:
interface i: f(int):int end;
class c implements i:
 method f(x:int) return x * 3; end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

                    3 

          *

                    PARAM: x
=======================================

.globl c
c:   
.quad c_f


c_f:
	movq	%rsi, %rax
	imulq	$3, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: junk at end of line, first unrecognized character is `3'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:9: Error: no such instruction: `x'
testcodebout18199.s:10: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-3.0:
interface i: f(int):int end;
class c implements i:
 method f(x:int) return x < 3; end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

                    3 

          <

                    PARAM: x
=======================================

.globl c
c:   
.quad c_f


c_f:
	movq	%rsi, %rax
	cmpq	$3, %rax	# checking if 3 less rax (inverted because right const not allwoed) 
	setl	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: junk at end of line, first unrecognized character is `3'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:9: Error: no such instruction: `x'
testcodebout18199.s:10: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-4.0:
interface i: f(int):int end;
class c implements i:
 method f(x:int) return 3 < x; end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

                    PARAM: x

          <

                    3 
=======================================

.globl c
c:   
.quad c_f


c_f:
	movq	%rsi, %r11
	cmpq	$3, %r11	# checking if 3 less r11
	setg	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: no such instruction: `x'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:9: Error: junk at end of line, first unrecognized character is `3'
testcodebout18199.s:10: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-5.0:
interface i: 
    f(int,int):int 
end;
class c implements i:
    method f(x:int,y:int) 
        return x + y; 
    end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

                    PARAM: y

          +

                    PARAM: x
=======================================

.globl c
c:   
.quad c_f


c_f:
	movq	%rsi, %rax
	movq	%rdx, %r11
	addq	%r11, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: no such instruction: `y'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:9: Error: no such instruction: `x'
testcodebout18199.s:10: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-6.0:
interface i: 
    f(int,int):int 
end;
class c implements i:
    method f(x:int,y:int) 
        return ((x + y) + 1) = y; 
    end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

                    PARAM: y

          =

                              1 

                    +

                                        PARAM: y

                              +

                                        PARAM: x
=======================================

.globl c
c:   
.quad c_f


c_f:
	movq	%rsi, %rax
	movq	%rdx, %r11
	addq	%r11, %rax
	addq	$1, %rax
	movq	%rdx, %r11
	cmpq	%rax, %r11	# checking if rax equals r11
	sete	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: no such instruction: `y'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:9: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:11: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:13: Error: no such instruction: `y'
testcodebout18199.s:15: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:17: Error: no such instruction: `x'
testcodebout18199.s:18: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-7.0:
interface i: 
    f(int,int):int 
end;
class c implements i:
    method f(x:int,y:int) 
        return (x * 2) + y; 
    end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

                    PARAM: y

          +

                              2 

                    *

                              PARAM: x
=======================================

.globl c
c:   
.quad c_f


c_f:
	movq	%rsi, %rax
	imulq	$2, %rax
	movq	%rdx, %r11
	addq	%r11, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: no such instruction: `y'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:9: Error: junk at end of line, first unrecognized character is `2'
testcodebout18199.s:11: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:13: Error: no such instruction: `x'
testcodebout18199.s:14: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-8.0:
interface i: 
    f(int,int):int 
end;
class c implements i:
    method f(x:int,y:int) 
        return (not x); 
    end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

          NOT

                    PARAM: x
=======================================

.globl c
c:   
.quad c_f


c_f:
	movq	%rsi, %rax
	notq	%rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: number of operands mismatch for `not'
testcodebout18199.s:7: Error: no such instruction: `x'
testcodebout18199.s:8: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/kingD-9.0:
interface i: 
    f(int,int):int 
end;
class c implements i:
    var kingD : int;
    method f(x:int,y:int) 
        return kingD; 
    end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

          CVAR: kingD
=======================================

.globl c
c:   
.quad c_f


c_f:
	movq	8(%rdi), %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: no such instruction: `kingd'
testcodebout18199.s:6: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-11.0:
interface Interface1:
	binaryOr(int, int): int
	squareSum(int, int) : int
	lessOrEqual(int, int) : int
	determinant(int, int, int, int): int
end;

interface Interface2: 
	offsetThisBy64(): int
	getNull(): Interface1
end;

class Class1 implements Interface1 :
	var var1 : int;
	var var2 : int;
	var var3 : Interface2;
	
	method binaryOr(a: int, b: int)
		return not ((not a) and (not b));
	end;
	
	method squareSum(a: int, b: int)
		return (a*a)+(b*b);
	end;
	
	method lessOrEqual(a: int, b: int)
		return not ((not (a < b)) and (not (a = b)));
	end;
	
	method determinant(a11: int, a12: int, a21: int, a22: int)
		return (a11*a22)-(a12*a21);
	end;
end;

class Class2 implements Interface2 :
	method offsetThisBy64()
		return this + 64;
	end;
	
	method getNull()
		return null Interface1;
	end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

          NOT

                              NOT

                                        PARAM: b

                    AND

                              NOT

                                        PARAM: a
=======================================
=======================================

RET

                              PARAM: b

                    *

                              PARAM: b

          +

                              PARAM: a

                    *

                              PARAM: a
=======================================
=======================================

RET

          NOT

                              NOT

                                                  PARAM: b

                                        =

                                                  PARAM: a

                    AND

                              NOT

                                                  PARAM: b

                                        <

                                                  PARAM: a
=======================================
=======================================

RET

                              PARAM: a21

                    *

                              PARAM: a12

          -

                              PARAM: a22

                    *

                              PARAM: a11
=======================================
=======================================

RET

                    64 

          +

                    THIS
=======================================
=======================================

RET

          NULLOP
=======================================

.globl Class1
Class1:   
.quad Class1_binaryOr
.quad Class1_squareSum
.quad Class1_lessOrEqual
.quad Class1_determinant
.quad 0 #offsetThisBy64
.quad 0 #getNull



.globl Class2
Class2:   
.quad 0 #binaryOr
.quad 0 #squareSum
.quad 0 #lessOrEqual
.quad 0 #determinant
.quad Class2_offsetThisBy64
.quad Class2_getNull


Class1_binaryOr:
	movq	%rsi, %rax
	notq	%rax
	movq	%rdx, %r11
	notq	%r11
	and	%r11, %rax
	notq	%rax
	ret
Class1_squareSum:
	movq	%rsi, %rax
	movq	%rsi, %r11
	imulq	%r11, %rax
	movq	%rdx, %r11
	movq	%rdx, %r10
	imulq	%r10, %r11
	addq	%r11, %rax
	ret
Class1_lessOrEqual:
	movq	%rsi, %rax
	movq	%rdx, %r11
	cmpq	%rax, %r11	# checking if rax less r11
	setg	%al
	and	$1, %rax
	imulq	$-1, %rax
	notq	%rax
	movq	%rsi, %r11
	movq	%rdx, %r10
	cmpq	%r11, %r10	# checking if r11 equals r10
	sete	%r11b
	and	$1, %r11
	imulq	$-1, %r11
	notq	%r11
	and	%r11, %rax
	notq	%rax
	ret
Class1_determinant:
	movq	%rsi, %rax
	movq	%r8, %r11
	imulq	%r11, %rax
	movq	%rdx, %r11
	movq	%rcx, %r10
	imulq	%r10, %r11
	subq	%r11, %rax
	ret
Class2_offsetThisBy64:
	movq	%rdi, %rax
	addq	$64, %rax
	ret
Class2_getNull:
	movq	$0, %rax
	ret

Übersetze und linke das Testprogramm:
In file included from /usr/ftp/pub/ubvl/test/codeb/testmain.c:13:0:
/home/ublu21/u11808206/test/codeb/thenotoriousj-11.call: In function ‘call’:
/home/ublu21/u11808206/test/codeb/thenotoriousj-11.call:40:58: warning: passing argument 1 of ‘Class2.offsetThisBy64’ makes pointer from integer without a cast [-Wint-conversion]
  Class2.offsetThisBy64(0) == 64 && Class2.offsetThisBy64(-3)==61 && Class2.offsetThisBy64(5)==69 &&
                                                          ^
/home/ublu21/u11808206/test/codeb/thenotoriousj-11.call:40:58: note: expected ‘struct objectc *’ but argument is of type ‘int’
/home/ublu21/u11808206/test/codeb/thenotoriousj-11.call:40:91: warning: passing argument 1 of ‘Class2.offsetThisBy64’ makes pointer from integer without a cast [-Wint-conversion]
  Class2.offsetThisBy64(0) == 64 && Class2.offsetThisBy64(-3)==61 && Class2.offsetThisBy64(5)==69 &&
                                                                                           ^
/home/ublu21/u11808206/test/codeb/thenotoriousj-11.call:40:91: note: expected ‘struct objectc *’ but argument is of type ‘int’
/home/ublu21/u11808206/test/codeb/thenotoriousj-11.call:41:17: warning: passing argument 1 of ‘Class2.getNull’ makes pointer from integer without a cast [-Wint-conversion]
  Class2.getNull(64) == 0 && Class2.getNull(-3)==0 && Class2.getNull(5)==0);
                 ^~
/home/ublu21/u11808206/test/codeb/thenotoriousj-11.call:41:17: note: expected ‘struct objectc *’ but argument is of type ‘int’
/home/ublu21/u11808206/test/codeb/thenotoriousj-11.call:41:44: warning: passing argument 1 of ‘Class2.getNull’ makes pointer from integer without a cast [-Wint-conversion]
  Class2.getNull(64) == 0 && Class2.getNull(-3)==0 && Class2.getNull(5)==0);
                                            ^
/home/ublu21/u11808206/test/codeb/thenotoriousj-11.call:41:44: note: expected ‘struct objectc *’ but argument is of type ‘int’
/home/ublu21/u11808206/test/codeb/thenotoriousj-11.call:41:69: warning: passing argument 1 of ‘Class2.getNull’ makes pointer from integer without a cast [-Wint-conversion]
  Class2.getNull(64) == 0 && Class2.getNull(-3)==0 && Class2.getNull(5)==0);
                                                                     ^
/home/ublu21/u11808206/test/codeb/thenotoriousj-11.call:41:69: note: expected ‘struct objectc *’ but argument is of type ‘int’
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: number of operands mismatch for `not'
testcodebout18199.s:7: Error: number of operands mismatch for `not'
testcodebout18199.s:9: Error: no such instruction: `b'
testcodebout18199.s:11: Error: number of operands mismatch for `and'
testcodebout18199.s:13: Error: number of operands mismatch for `not'
testcodebout18199.s:15: Error: no such instruction: `a'
testcodebout18199.s:16: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:17: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:21: Error: symbol `PARAM' is already defined
testcodebout18199.s:21: Error: no such instruction: `b'
testcodebout18199.s:23: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:25: Error: symbol `PARAM' is already defined
testcodebout18199.s:25: Error: no such instruction: `b'
testcodebout18199.s:27: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:29: Error: symbol `PARAM' is already defined
testcodebout18199.s:29: Error: no such instruction: `a'
testcodebout18199.s:31: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:33: Error: symbol `PARAM' is already defined
testcodebout18199.s:33: Error: no such instruction: `a'
testcodebout18199.s:34: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:35: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:39: Error: number of operands mismatch for `not'
testcodebout18199.s:41: Error: number of operands mismatch for `not'
testcodebout18199.s:43: Error: symbol `PARAM' is already defined
testcodebout18199.s:43: Error: no such instruction: `b'
testcodebout18199.s:45: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:47: Error: symbol `PARAM' is already defined
testcodebout18199.s:47: Error: no such instruction: `a'
testcodebout18199.s:49: Error: number of operands mismatch for `and'
testcodebout18199.s:51: Error: number of operands mismatch for `not'
testcodebout18199.s:53: Error: symbol `PARAM' is already defined
testcodebout18199.s:53: Error: no such instruction: `b'
testcodebout18199.s:55: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:57: Error: symbol `PARAM' is already defined
testcodebout18199.s:57: Error: no such instruction: `a'
testcodebout18199.s:58: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:59: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:63: Error: symbol `PARAM' is already defined
testcodebout18199.s:63: Error: no such instruction: `a21'
testcodebout18199.s:65: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:67: Error: symbol `PARAM' is already defined
testcodebout18199.s:67: Error: no such instruction: `a12'
testcodebout18199.s:69: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:71: Error: symbol `PARAM' is already defined
testcodebout18199.s:71: Error: no such instruction: `a22'
testcodebout18199.s:73: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:75: Error: symbol `PARAM' is already defined
testcodebout18199.s:75: Error: no such instruction: `a11'
testcodebout18199.s:76: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:77: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:81: Error: junk at end of line, first unrecognized character is `6'
testcodebout18199.s:83: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:85: Error: no such instruction: `this'
testcodebout18199.s:86: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:87: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:91: Error: no such instruction: `nullop'
testcodebout18199.s:92: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-12.0:
interface Interface1:
	add2(int, int) : int
	calc1(int, int) : int
	calc2(int, int) : int
	calc3(int, int, int) : int
end;

class Class1 implements Interface1 :
	method add2(in1: int, in2: int)
		return in1+in2;
	end;
	method calc1(a: int, b: int)
		return ((a * b) + (a + b)) + b + a + b + ((a * b) + (a + b));
	end;
	method calc2(a: int, b: int)
		return ((a - b) * (a - b)) + b + a + b + (a - b);
	end;
	method calc3(a: int, b: int, c:int)
		return a + b + c + (a + b + c);
	end;
end;
Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

                    PARAM: in2

          +

                    PARAM: in1
=======================================
=======================================

RET

                                                                      PARAM: b

                                                            +

                                                                      PARAM: a

                                                  +

                                                                      PARAM: b

                                                            *

                                                                      PARAM: a

                                        +

                                                  PARAM: b

                              +

                                        PARAM: a

                    +

                              PARAM: b

          +

                                        PARAM: b

                              +

                                        PARAM: a

                    +

                                        PARAM: b

                              *

                                        PARAM: a
=======================================
=======================================

RET

                                                            PARAM: b

                                                  -

                                                            PARAM: a

                                        +

                                                  PARAM: b

                              +

                                        PARAM: a

                    +

                              PARAM: b

          +

                                        PARAM: b

                              -

                                        PARAM: a

                    *

                                        PARAM: b

                              -

                                        PARAM: a
=======================================
=======================================

RET

                                                            PARAM: c

                                                  +

                                                            PARAM: b

                                        +

                                                  PARAM: a

                              +

                                        PARAM: c

                    +

                              PARAM: b

          +

                    PARAM: a
=======================================

.globl Class1
Class1:   
.quad Class1_add2
.quad Class1_calc1
.quad Class1_calc2
.quad Class1_calc3


Class1_add2:
	movq	%rsi, %rax
	movq	%rdx, %r11
	addq	%r11, %rax
	ret
Class1_calc1:
	movq	%rsi, %rax
	movq	%rdx, %r11
	imulq	%r11, %rax
	movq	%rsi, %r11
	movq	%rdx, %r10
	addq	%r10, %r11
	addq	%r11, %rax
	movq	%rdx, %r11
	movq	%rsi, %r10
	movq	%rdx, %r9
	movq	%rsi, %r8
	movq	%rdx, %rcx
	imulq	%rcx, %r8
	movq	%rsi, %rcx
	movq	%rdx, %rdx
	addq	%rdx, %rcx
	addq	%rcx, %r8
	addq	%r8, %r9
	addq	%r9, %r10
	addq	%r10, %r11
	addq	%r11, %rax
	ret
Class1_calc2:
	movq	%rsi, %rax
	movq	%rdx, %r11
	subq	%r11, %rax
	movq	%rsi, %r11
	movq	%rdx, %r10
	subq	%r10, %r11
	imulq	%r11, %rax
	movq	%rdx, %r11
	movq	%rsi, %r10
	movq	%rdx, %r9
	movq	%rsi, %r8
	movq	%rdx, %rcx
	subq	%rcx, %r8
	addq	%r8, %r9
	addq	%r9, %r10
	addq	%r10, %r11
	addq	%r11, %rax
	ret
Class1_calc3:
	movq	%rsi, %rax
	movq	%rdx, %r11
	movq	%rcx, %r10
	movq	%rsi, %r9
	movq	%rdx, %r8
	movq	%rcx, %rcx
	addq	%rcx, %r8
	addq	%r8, %r9
	addq	%r9, %r10
	addq	%r10, %r11
	addq	%r11, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: no such instruction: `in2'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:9: Error: no such instruction: `in1'
testcodebout18199.s:10: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:11: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:15: Error: symbol `PARAM' is already defined
testcodebout18199.s:15: Error: no such instruction: `b'
testcodebout18199.s:17: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:19: Error: symbol `PARAM' is already defined
testcodebout18199.s:19: Error: no such instruction: `a'
testcodebout18199.s:21: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:23: Error: symbol `PARAM' is already defined
testcodebout18199.s:23: Error: no such instruction: `b'
testcodebout18199.s:25: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:27: Error: symbol `PARAM' is already defined
testcodebout18199.s:27: Error: no such instruction: `a'
testcodebout18199.s:29: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:31: Error: symbol `PARAM' is already defined
testcodebout18199.s:31: Error: no such instruction: `b'
testcodebout18199.s:33: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:35: Error: symbol `PARAM' is already defined
testcodebout18199.s:35: Error: no such instruction: `a'
testcodebout18199.s:37: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:39: Error: symbol `PARAM' is already defined
testcodebout18199.s:39: Error: no such instruction: `b'
testcodebout18199.s:41: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:43: Error: symbol `PARAM' is already defined
testcodebout18199.s:43: Error: no such instruction: `b'
testcodebout18199.s:45: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:47: Error: symbol `PARAM' is already defined
testcodebout18199.s:47: Error: no such instruction: `a'
testcodebout18199.s:49: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:51: Error: symbol `PARAM' is already defined
testcodebout18199.s:51: Error: no such instruction: `b'
testcodebout18199.s:53: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:55: Error: symbol `PARAM' is already defined
testcodebout18199.s:55: Error: no such instruction: `a'
testcodebout18199.s:56: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:57: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:61: Error: symbol `PARAM' is already defined
testcodebout18199.s:61: Error: no such instruction: `b'
testcodebout18199.s:63: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:65: Error: symbol `PARAM' is already defined
testcodebout18199.s:65: Error: no such instruction: `a'
testcodebout18199.s:67: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:69: Error: symbol `PARAM' is already defined
testcodebout18199.s:69: Error: no such instruction: `b'
testcodebout18199.s:71: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:73: Error: symbol `PARAM' is already defined
testcodebout18199.s:73: Error: no such instruction: `a'
testcodebout18199.s:75: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:77: Error: symbol `PARAM' is already defined
testcodebout18199.s:77: Error: no such instruction: `b'
testcodebout18199.s:79: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:81: Error: symbol `PARAM' is already defined
testcodebout18199.s:81: Error: no such instruction: `b'
testcodebout18199.s:83: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:85: Error: symbol `PARAM' is already defined
testcodebout18199.s:85: Error: no such instruction: `a'
testcodebout18199.s:87: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:89: Error: symbol `PARAM' is already defined
testcodebout18199.s:89: Error: no such instruction: `b'
testcodebout18199.s:91: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:93: Error: symbol `PARAM' is already defined
testcodebout18199.s:93: Error: no such instruction: `a'
testcodebout18199.s:94: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:95: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:99: Error: symbol `PARAM' is already defined
testcodebout18199.s:99: Error: no such instruction: `c'
testcodebout18199.s:101: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:103: Error: symbol `PARAM' is already defined
testcodebout18199.s:103: Error: no such instruction: `b'
testcodebout18199.s:105: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:107: Error: symbol `PARAM' is already defined
testcodebout18199.s:107: Error: no such instruction: `a'
testcodebout18199.s:109: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:111: Error: symbol `PARAM' is already defined
testcodebout18199.s:111: Error: no such instruction: `c'
testcodebout18199.s:113: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:115: Error: symbol `PARAM' is already defined
testcodebout18199.s:115: Error: no such instruction: `b'
testcodebout18199.s:117: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:119: Error: symbol `PARAM' is already defined
testcodebout18199.s:119: Error: no such instruction: `a'
testcodebout18199.s:120: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-13.0:
interface Interface1:
	nestedVariables(int, int) : int 
	nestedControl(int, int) : int
end;

class Class1 implements Interface1 :
	method nestedVariables(a: int, b: int)
		var sum : int := a + b;
		if 0 < a then
			var nested1 : int := sum + a;
			sum := sum + nested1;
		else 
			var nested2 : int := sum - a;
			sum := sum + nested2;
		end;
		
		return sum;
	end;
	
	/* a computer plays the guessing game in intervall [-1000, 1000]*/
	method nestedControl(a: int, b: int)
		var guess1 : int := 0-1000;
		while guess1 < 1001 do
			if guess1 = a then
				var guess2 : int := 0-1000;
				while guess2 < 1001 do
					if guess2 = b then
						return 1; /* FOUND IT, CALL ME HACKERMAN */
					else
						guess2 := guess2 + 1;
					end;
				end;
			end;
			
			guess1 := guess1 + 1;
		end;
		
		return 0; /* BETTER STICK TO UNO */
	end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

                    PARAM: b

          +

                    PARAM: a

:=

          ID: sum (Offset: 1) 
=======================================
=======================================
=======================================
=======================================

                    PARAM: a

          +

                    ID: sum (Offset: 1) 

:=

          ID: nested1 (Offset: 2) 
=======================================
=======================================

                    ID: nested1 (Offset: 2) 

          +

                    ID: sum (Offset: 1) 

:=

          ID: sum (Offset: 1) 
=======================================
=======================================

                    PARAM: a

          -

                    ID: sum (Offset: 1) 

:=

          ID: nested2 (Offset: 2) 
=======================================
=======================================

                    ID: nested2 (Offset: 2) 

          +

                    ID: sum (Offset: 1) 

:=

          ID: sum (Offset: 1) 
=======================================
=======================================

RET

          ID: sum (Offset: 1) 
=======================================
=======================================

                    1000 

          -

                    0 

:=

          ID: guess1 (Offset: 1) 
=======================================
=======================================
=======================================
=======================================
=======================================
=======================================

                    1000 

          -

                    0 

:=

          ID: guess2 (Offset: 2) 
=======================================
=======================================
=======================================
=======================================
=======================================
=======================================

RET

          1 
=======================================
=======================================

                    1 

          +

                    ID: guess2 (Offset: 2) 

:=

          ID: guess2 (Offset: 2) 
=======================================
=======================================

                    1 

          +

                    ID: guess1 (Offset: 1) 

:=

          ID: guess1 (Offset: 1) 
=======================================
=======================================

RET

          0 
=======================================

.globl Class1
Class1:   
.quad Class1_nestedVariables
.quad Class1_nestedControl


Class1_nestedVariables:
	movq	%rsi, %rax
	movq	%rdx, %r11
	addq	%r11, %rax
	movq	%rax, 8(%rsp)
	movq	8(%rsp), %rax
	movq	%rsi, %r11
	addq	%r11, %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rax
	movq	16(%rsp), %r11
	addq	%r11, %rax
	movq	%rax, 8(%rsp)
	movq	8(%rsp), %rax
	movq	%rsi, %r11
	subq	%r11, %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rax
	movq	16(%rsp), %r11
	addq	%r11, %rax
	movq	%rax, 8(%rsp)
	movq	8(%rsp), %rax
	ret
Class1_nestedControl:
	movq	$1000, %r11
	movq	$0, %rax
	subq	%r11, %rax
	movq	%rax, 8(%rsp)
	movq	$1000, %r11
	movq	$0, %rax
	subq	%r11, %rax
	movq	%rax, 16(%rsp)
	movq	$1, %rax
	ret
	movq	16(%rsp), %rax
	addq	$1, %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rax
	addq	$1, %rax
	movq	%rax, 8(%rsp)
	movq	$0, %rax
	ret

Übersetze und linke das Testprogramm:
In file included from /usr/ftp/pub/ubvl/test/codeb/testmain.c:13:0:
/home/ublu21/u11808206/test/codeb/thenotoriousj-13.call: In function ‘call’:
/home/ublu21/u11808206/test/codeb/thenotoriousj-13.call:6:33: warning: ‘struct objectc’ declared inside parameter list will not be visible outside of this definition or declaration
  long (*nestedVariables)(struct objectc *, long, long);
                                 ^~~~~~~
/home/ublu21/u11808206/test/codeb/thenotoriousj-13.call:7:31: warning: ‘struct objectc’ declared inside parameter list will not be visible outside of this definition or declaration
  long (*nestedControl)(struct objectc *, long, long);
                               ^~~~~~~
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:3: Error: no such instruction: `b'
testcodebout18199.s:5: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:7: Error: no such instruction: `a'
testcodebout18199.s:9: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:11: Error: no such instruction: `sum (Offset:1)'
testcodebout18199.s:12: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:13: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:14: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:15: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:17: Error: no such instruction: `a'
testcodebout18199.s:19: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:21: Error: no such instruction: `sum (Offset:1)'
testcodebout18199.s:23: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:25: Error: no such instruction: `nested1 (Offset:2)'
testcodebout18199.s:26: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:27: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:29: Error: no such instruction: `nested1 (Offset:2)'
testcodebout18199.s:31: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:33: Error: no such instruction: `sum (Offset:1)'
testcodebout18199.s:35: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:37: Error: no such instruction: `sum (Offset:1)'
testcodebout18199.s:38: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:39: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:41: Error: no such instruction: `a'
testcodebout18199.s:43: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:45: Error: no such instruction: `sum (Offset:1)'
testcodebout18199.s:47: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:49: Error: no such instruction: `nested2 (Offset:2)'
testcodebout18199.s:50: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:51: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:53: Error: no such instruction: `nested2 (Offset:2)'
testcodebout18199.s:55: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:57: Error: no such instruction: `sum (Offset:1)'
testcodebout18199.s:59: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:61: Error: no such instruction: `sum (Offset:1)'
testcodebout18199.s:62: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:63: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:67: Error: symbol `ID' is already defined
testcodebout18199.s:67: Error: no such instruction: `sum (Offset:1)'
testcodebout18199.s:68: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:69: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:71: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:73: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:75: Error: junk at end of line, first unrecognized character is `0'
testcodebout18199.s:77: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:79: Error: symbol `ID' is already defined
testcodebout18199.s:79: Error: no such instruction: `guess1 (Offset:1)'
testcodebout18199.s:80: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:81: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:82: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:83: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:84: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:85: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:87: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:89: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:91: Error: junk at end of line, first unrecognized character is `0'
testcodebout18199.s:93: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:95: Error: symbol `ID' is already defined
testcodebout18199.s:95: Error: no such instruction: `guess2 (Offset:2)'
testcodebout18199.s:96: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:97: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:98: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:99: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:100: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:101: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:105: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:106: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:107: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:109: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:111: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:113: Error: symbol `ID' is already defined
testcodebout18199.s:113: Error: no such instruction: `guess2 (Offset:2)'
testcodebout18199.s:115: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:117: Error: symbol `ID' is already defined
testcodebout18199.s:117: Error: no such instruction: `guess2 (Offset:2)'
testcodebout18199.s:118: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:119: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:121: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:123: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:125: Error: symbol `ID' is already defined
testcodebout18199.s:125: Error: no such instruction: `guess1 (Offset:1)'
testcodebout18199.s:127: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:129: Error: symbol `ID' is already defined
testcodebout18199.s:129: Error: no such instruction: `guess1 (Offset:1)'
testcodebout18199.s:130: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:131: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:135: Error: junk at end of line, first unrecognized character is `0'
testcodebout18199.s:136: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-14.0:
interface Interface1:
	bitcount(int) : int
end;

interface Interface2: 
	init() : int
	factorial(int) : int
end;

class Class1 implements Interface1 :

	/* Counting set bits, Kernighan's way */
	method bitcount(i : int)
		var c : int := 0;
		while not (i = 0) do
			i := i and (i - 1);
			c := c + 1;
		end;
		
		return c;
	end;
end;

/*Highly efficient version of factorial, for use in commercial code contact me*/
class Cacher implements Interface2 :
	var lastN : int;
	var lastResult : int;
	
	method init()
		lastN := 0;
		lastResult := 0;
		return 0;
	end;
	
	method factorial(n: int)
		var temp : int := 2 - 1;
		
		if n = lastN then
			return lastResult;
		else 
			lastN := n;
		end;
		
		while 1 < n do
			temp := temp * n;
			n := n - 1;
		end;
		
		lastResult := temp;
		
		return temp;
	end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

          0 

:=

          ID: c (Offset: 1) 
=======================================
=======================================
=======================================
=======================================

                              1 

                    -

                              PARAM: i

          AND

                    PARAM: i

:=

          PARAM: i
=======================================
=======================================

                    1 

          +

                    ID: c (Offset: 1) 

:=

          ID: c (Offset: 1) 
=======================================
=======================================

RET

          ID: c (Offset: 1) 
=======================================
=======================================

          0 

:=

          CVAR: lastN
=======================================
=======================================

          0 

:=

          CVAR: lastResult
=======================================
=======================================

RET

          0 
=======================================
=======================================

                    1 

          -

                    2 

:=

          ID: temp (Offset: 1) 
=======================================
=======================================
=======================================
=======================================

RET

          CVAR: lastResult
=======================================
=======================================

          PARAM: n

:=

          CVAR: lastN
=======================================
=======================================
=======================================
=======================================

                    PARAM: n

          *

                    ID: temp (Offset: 1) 

:=

          ID: temp (Offset: 1) 
=======================================
=======================================

                    1 

          -

                    PARAM: n

:=

          PARAM: n
=======================================
=======================================

          ID: temp (Offset: 1) 

:=

          CVAR: lastResult
=======================================
=======================================

RET

          ID: temp (Offset: 1) 
=======================================

.globl Class1
Class1:   
.quad Class1_bitcount
.quad 0 #init
.quad 0 #factorial



.globl Cacher
Cacher:   
.quad 0 #bitcount
.quad Cacher_init
.quad Cacher_factorial


Class1_bitcount:
	movq	$0, 8(%rsp)
	movq	%rsi, %rax
	movq	%rsi, %r11
	subq	$1, %r11
	and	%r11, %rax
	movq	%rax, %rsi
	movq	8(%rsp), %rax
	addq	$1, %rax
	movq	%rax, 8(%rsp)
	movq	8(%rsp), %rax
	ret
Cacher_init:
	movq	$0, 8(%rdi)
	movq	$0, 16(%rdi)
	movq	$0, %rax
	ret
Cacher_factorial:
	movq	$1, %r11
	movq	$2, %rax
	subq	%r11, %rax
	movq	%rax, 8(%rsp)
	movq	16(%rdi), %rax
	ret
	movq	%rsi, 8(%rdi)
	movq	8(%rsp), %rax
	movq	%rsi, %r11
	imulq	%r11, %rax
	movq	%rax, 8(%rsp)
	movq	%rsi, %rax
	subq	$1, %rax
	movq	%rax, %rsi
	movq	8(%rsp), 16(%rdi)
	movq	8(%rsp), %rax
	ret

Übersetze und linke das Testprogramm:
In file included from /usr/ftp/pub/ubvl/test/codeb/testmain.c:13:0:
/home/ublu21/u11808206/test/codeb/thenotoriousj-14.call: In function ‘call’:
/home/ublu21/u11808206/test/codeb/thenotoriousj-14.call:23:14: warning: passing argument 1 of ‘Cacher.init’ from incompatible pointer type [-Wincompatible-pointer-types]
  Cacher.init(cacher) == 0 &&
              ^~~~~~
/home/ublu21/u11808206/test/codeb/thenotoriousj-14.call:23:14: note: expected ‘struct objectc *’ but argument is of type ‘struct objectClass1 *’
/home/ublu21/u11808206/test/codeb/thenotoriousj-14.call:24:19: warning: passing argument 1 of ‘Cacher.factorial’ from incompatible pointer type [-Wincompatible-pointer-types]
  Cacher.factorial(cacher, -10) == 1 && Cacher.factorial(cacher, 10) == 3628800 &&
                   ^~~~~~
/home/ublu21/u11808206/test/codeb/thenotoriousj-14.call:24:19: note: expected ‘struct objectc *’ but argument is of type ‘struct objectClass1 *’
/home/ublu21/u11808206/test/codeb/thenotoriousj-14.call:24:57: warning: passing argument 1 of ‘Cacher.factorial’ from incompatible pointer type [-Wincompatible-pointer-types]
  Cacher.factorial(cacher, -10) == 1 && Cacher.factorial(cacher, 10) == 3628800 &&
                                                         ^~~~~~
/home/ublu21/u11808206/test/codeb/thenotoriousj-14.call:24:57: note: expected ‘struct objectc *’ but argument is of type ‘struct objectClass1 *’
/home/ublu21/u11808206/test/codeb/thenotoriousj-14.call:25:19: warning: passing argument 1 of ‘Cacher.factorial’ from incompatible pointer type [-Wincompatible-pointer-types]
  Cacher.factorial(cacher, 5) == 120 && Cacher.factorial(cacher, 5) == 120);
                   ^~~~~~
/home/ublu21/u11808206/test/codeb/thenotoriousj-14.call:25:19: note: expected ‘struct objectc *’ but argument is of type ‘struct objectClass1 *’
/home/ublu21/u11808206/test/codeb/thenotoriousj-14.call:25:57: warning: passing argument 1 of ‘Cacher.factorial’ from incompatible pointer type [-Wincompatible-pointer-types]
  Cacher.factorial(cacher, 5) == 120 && Cacher.factorial(cacher, 5) == 120);
                                                         ^~~~~~
/home/ublu21/u11808206/test/codeb/thenotoriousj-14.call:25:57: note: expected ‘struct objectc *’ but argument is of type ‘struct objectClass1 *’
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:3: Error: junk at end of line, first unrecognized character is `0'
testcodebout18199.s:5: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:7: Error: no such instruction: `c (Offset:1)'
testcodebout18199.s:8: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:9: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:10: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:11: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:13: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:15: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:17: Error: no such instruction: `i'
testcodebout18199.s:19: Error: number of operands mismatch for `and'
testcodebout18199.s:21: Error: no such instruction: `i'
testcodebout18199.s:23: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:25: Error: no such instruction: `i'
testcodebout18199.s:26: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:27: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:29: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:31: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:33: Error: no such instruction: `c (Offset:1)'
testcodebout18199.s:35: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:37: Error: no such instruction: `c (Offset:1)'
testcodebout18199.s:38: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:39: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:43: Error: symbol `ID' is already defined
testcodebout18199.s:43: Error: no such instruction: `c (Offset:1)'
testcodebout18199.s:44: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:45: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:47: Error: junk at end of line, first unrecognized character is `0'
testcodebout18199.s:49: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:51: Error: no such instruction: `lastn'
testcodebout18199.s:52: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:53: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:55: Error: junk at end of line, first unrecognized character is `0'
testcodebout18199.s:57: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:59: Error: no such instruction: `lastresult'
testcodebout18199.s:60: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:61: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:65: Error: junk at end of line, first unrecognized character is `0'
testcodebout18199.s:66: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:67: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:69: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:71: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:73: Error: junk at end of line, first unrecognized character is `2'
testcodebout18199.s:75: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:77: Error: symbol `ID' is already defined
testcodebout18199.s:77: Error: no such instruction: `temp (Offset:1)'
testcodebout18199.s:78: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:79: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:80: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:81: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:85: Error: symbol `CVAR' is already defined
testcodebout18199.s:85: Error: no such instruction: `lastresult'
testcodebout18199.s:86: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:87: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:89: Error: symbol `PARAM' is already defined
testcodebout18199.s:89: Error: no such instruction: `n'
testcodebout18199.s:91: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:93: Error: symbol `CVAR' is already defined
testcodebout18199.s:93: Error: no such instruction: `lastn'
testcodebout18199.s:94: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:95: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:96: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:97: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:99: Error: symbol `PARAM' is already defined
testcodebout18199.s:99: Error: no such instruction: `n'
testcodebout18199.s:101: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:103: Error: symbol `ID' is already defined
testcodebout18199.s:103: Error: no such instruction: `temp (Offset:1)'
testcodebout18199.s:105: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:107: Error: symbol `ID' is already defined
testcodebout18199.s:107: Error: no such instruction: `temp (Offset:1)'
testcodebout18199.s:108: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:109: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:111: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:113: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:115: Error: symbol `PARAM' is already defined
testcodebout18199.s:115: Error: no such instruction: `n'
testcodebout18199.s:117: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:119: Error: symbol `PARAM' is already defined
testcodebout18199.s:119: Error: no such instruction: `n'
testcodebout18199.s:120: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:121: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:123: Error: symbol `ID' is already defined
testcodebout18199.s:123: Error: no such instruction: `temp (Offset:1)'
testcodebout18199.s:125: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:127: Error: symbol `CVAR' is already defined
testcodebout18199.s:127: Error: no such instruction: `lastresult'
testcodebout18199.s:128: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:129: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:133: Error: symbol `ID' is already defined
testcodebout18199.s:133: Error: no such instruction: `temp (Offset:1)'
testcodebout18199.s:134: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:183: Error: too many memory references for `movq'
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-15.0:
interface Interface1:
	calc(int, int) : int
end;

class Class1 implements /* nothing */ :
	var var1 : int;
	var var2 : int;
	
	method calc(a: int, b: int)
		var c2 : int := (a*a) + (b*b);
		var c4 : int  := c2 * c2;
		var c5 : int:= c4 - 1;
		
		return c5 - a;
	end;
end;
Übersetzung: Status korrekt

Ausgabe:
=======================================

                              PARAM: b

                    *

                              PARAM: b

          +

                              PARAM: a

                    *

                              PARAM: a

:=

          ID: c2 (Offset: 1) 
=======================================
=======================================

                    ID: c2 (Offset: 1) 

          *

                    ID: c2 (Offset: 1) 

:=

          ID: c4 (Offset: 2) 
=======================================
=======================================

                    1 

          -

                    ID: c4 (Offset: 2) 

:=

          ID: c5 (Offset: 3) 
=======================================
=======================================

RET

                    PARAM: a

          -

                    ID: c5 (Offset: 3) 
=======================================

.globl Class1
Class1:   
.quad Class1_calc


Class1_calc:
	movq	%rsi, %rax
	movq	%rsi, %r11
	imulq	%r11, %rax
	movq	%rdx, %r11
	movq	%rdx, %r10
	imulq	%r10, %r11
	addq	%r11, %rax
	movq	%rax, 8(%rsp)
	movq	8(%rsp), %rax
	movq	8(%rsp), %r11
	imulq	%r11, %rax
	movq	%rax, 16(%rsp)
	movq	16(%rsp), %rax
	subq	$1, %rax
	movq	%rax, 24(%rsp)
	movq	24(%rsp), %rax
	movq	%rsi, %r11
	subq	%r11, %rax
	ret

Übersetze und linke das Testprogramm:
In file included from /usr/ftp/pub/ubvl/test/codeb/testmain.c:13:0:
/home/ublu21/u11808206/test/codeb/thenotoriousj-15.call: In function ‘call’:
/home/ublu21/u11808206/test/codeb/thenotoriousj-15.call:18:17: warning: passing argument 1 of ‘Class1.calc’ from incompatible pointer type [-Wincompatible-pointer-types]
 RET(Class1.calc(classobj, -27, 64) == 23280651 && Class1.calc(classobj, 255, -95) == 5483402244 &&
                 ^~~~~~~~
/home/ublu21/u11808206/test/codeb/thenotoriousj-15.call:18:17: note: expected ‘struct objectc *’ but argument is of type ‘struct objectClass1 *’
/home/ublu21/u11808206/test/codeb/thenotoriousj-15.call:18:63: warning: passing argument 1 of ‘Class1.calc’ from incompatible pointer type [-Wincompatible-pointer-types]
 RET(Class1.calc(classobj, -27, 64) == 23280651 && Class1.calc(classobj, 255, -95) == 5483402244 &&
                                                               ^~~~~~~~
/home/ublu21/u11808206/test/codeb/thenotoriousj-15.call:18:63: note: expected ‘struct objectc *’ but argument is of type ‘struct objectClass1 *’
/home/ublu21/u11808206/test/codeb/thenotoriousj-15.call:19:14: warning: passing argument 1 of ‘Class1.calc’ from incompatible pointer type [-Wincompatible-pointer-types]
  Class1.calc(classobj, 0, 0) == -1 && Class1.calc(classobj, -65, -69) == 80748260);
              ^~~~~~~~
/home/ublu21/u11808206/test/codeb/thenotoriousj-15.call:19:14: note: expected ‘struct objectc *’ but argument is of type ‘struct objectClass1 *’
/home/ublu21/u11808206/test/codeb/thenotoriousj-15.call:19:51: warning: passing argument 1 of ‘Class1.calc’ from incompatible pointer type [-Wincompatible-pointer-types]
  Class1.calc(classobj, 0, 0) == -1 && Class1.calc(classobj, -65, -69) == 80748260);
                                                   ^~~~~~~~
/home/ublu21/u11808206/test/codeb/thenotoriousj-15.call:19:51: note: expected ‘struct objectc *’ but argument is of type ‘struct objectClass1 *’
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:3: Error: no such instruction: `b'
testcodebout18199.s:5: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:7: Error: no such instruction: `b'
testcodebout18199.s:9: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:11: Error: no such instruction: `a'
testcodebout18199.s:13: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:15: Error: no such instruction: `a'
testcodebout18199.s:17: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:19: Error: no such instruction: `c2 (Offset:1)'
testcodebout18199.s:20: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:21: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:23: Error: no such instruction: `c2 (Offset:1)'
testcodebout18199.s:25: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:27: Error: no such instruction: `c2 (Offset:1)'
testcodebout18199.s:29: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:31: Error: no such instruction: `c4 (Offset:2)'
testcodebout18199.s:32: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:33: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:35: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:37: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:39: Error: no such instruction: `c4 (Offset:2)'
testcodebout18199.s:41: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:43: Error: no such instruction: `c5 (Offset:3)'
testcodebout18199.s:44: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:45: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:49: Error: symbol `PARAM' is already defined
testcodebout18199.s:49: Error: no such instruction: `a'
testcodebout18199.s:51: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:53: Error: symbol `ID' is already defined
testcodebout18199.s:53: Error: no such instruction: `c5 (Offset:3)'
testcodebout18199.s:54: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-16.0:
interface Interface1:
	init():int
	calc(int) : int
end;

class Class1 implements Interface1 :
	var var1 : int;
	var var2 : int;
	var var3 : int;
	var var4 : int;
	
	method init()
		var1 := 1;
		var2 := 12;
		var3 := 123;
		var4 := var1 + var2 + var3;
		return var1 + var2 + var3;
	end;
	
	method calc(in: int)
		var sum : int := var1;
		sum := sum + var2 + in;
		return sum;
	end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

          1 

:=

          CVAR: var1
=======================================
=======================================

          12 

:=

          CVAR: var2
=======================================
=======================================

          123 

:=

          CVAR: var3
=======================================
=======================================

                              CVAR: var3

                    +

                              CVAR: var2

          +

                    CVAR: var1

:=

          CVAR: var4
=======================================
=======================================

RET

                              CVAR: var3

                    +

                              CVAR: var2

          +

                    CVAR: var1
=======================================
=======================================

          CVAR: var1

:=

          ID: sum (Offset: 1) 
=======================================
=======================================

                              PARAM: in

                    +

                              CVAR: var2

          +

                    ID: sum (Offset: 1) 

:=

          ID: sum (Offset: 1) 
=======================================
=======================================

RET

          ID: sum (Offset: 1) 
=======================================

.globl Class1
Class1:   
.quad Class1_init
.quad Class1_calc


Class1_init:
	movq	$1, 8(%rdi)
	movq	$12, 16(%rdi)
	movq	$123, 24(%rdi)
	movq	8(%rdi), %rax
	movq	16(%rdi), %r11
	movq	24(%rdi), %r10
	addq	%r10, %r11
	addq	%r11, %rax
	movq	%rax, 32(%rdi)
	movq	8(%rdi), %rax
	movq	16(%rdi), %r11
	movq	24(%rdi), %r10
	addq	%r10, %r11
	addq	%r11, %rax
	ret
Class1_calc:
	movq	8(%rdi), 8(%rsp)
	movq	8(%rsp), %rax
	movq	16(%rdi), %r11
	movq	%rsi, %r10
	addq	%r10, %r11
	addq	%r11, %rax
	movq	%rax, 8(%rsp)
	movq	8(%rsp), %rax
	ret

Übersetze und linke das Testprogramm:
In file included from /usr/ftp/pub/ubvl/test/codeb/testmain.c:13:0:
/home/ublu21/u11808206/test/codeb/thenotoriousj-16.call: In function ‘call’:
/home/ublu21/u11808206/test/codeb/thenotoriousj-16.call:21:17: warning: passing argument 1 of ‘Class1.init’ from incompatible pointer type [-Wincompatible-pointer-types]
 RET(Class1.init(classobj) == 136 &&
                 ^~~~~~~~
/home/ublu21/u11808206/test/codeb/thenotoriousj-16.call:21:17: note: expected ‘struct objectc *’ but argument is of type ‘struct objectClass1 *’
/home/ublu21/u11808206/test/codeb/thenotoriousj-16.call:23:14: warning: passing argument 1 of ‘Class1.calc’ from incompatible pointer type [-Wincompatible-pointer-types]
  Class1.calc(classobj, -27) == -14 && Class1.calc(classobj, 255) == 268);
              ^~~~~~~~
/home/ublu21/u11808206/test/codeb/thenotoriousj-16.call:23:14: note: expected ‘struct objectc *’ but argument is of type ‘struct objectClass1 *’
/home/ublu21/u11808206/test/codeb/thenotoriousj-16.call:23:51: warning: passing argument 1 of ‘Class1.calc’ from incompatible pointer type [-Wincompatible-pointer-types]
  Class1.calc(classobj, -27) == -14 && Class1.calc(classobj, 255) == 268);
                                                   ^~~~~~~~
/home/ublu21/u11808206/test/codeb/thenotoriousj-16.call:23:51: note: expected ‘struct objectc *’ but argument is of type ‘struct objectClass1 *’
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:3: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:5: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:7: Error: no such instruction: `var1'
testcodebout18199.s:8: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:9: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:11: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:13: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:15: Error: no such instruction: `var2'
testcodebout18199.s:16: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:17: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:19: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:21: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:23: Error: no such instruction: `var3'
testcodebout18199.s:24: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:25: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:27: Error: no such instruction: `var3'
testcodebout18199.s:29: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:31: Error: no such instruction: `var2'
testcodebout18199.s:33: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:35: Error: no such instruction: `var1'
testcodebout18199.s:37: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:39: Error: no such instruction: `var4'
testcodebout18199.s:40: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:41: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:45: Error: symbol `CVAR' is already defined
testcodebout18199.s:45: Error: no such instruction: `var3'
testcodebout18199.s:47: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:49: Error: symbol `CVAR' is already defined
testcodebout18199.s:49: Error: no such instruction: `var2'
testcodebout18199.s:51: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:53: Error: symbol `CVAR' is already defined
testcodebout18199.s:53: Error: no such instruction: `var1'
testcodebout18199.s:54: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:55: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:57: Error: symbol `CVAR' is already defined
testcodebout18199.s:57: Error: no such instruction: `var1'
testcodebout18199.s:59: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:61: Error: no such instruction: `sum (Offset:1)'
testcodebout18199.s:62: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:63: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:65: Error: number of operands mismatch for `in'
testcodebout18199.s:67: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:69: Error: symbol `CVAR' is already defined
testcodebout18199.s:69: Error: no such instruction: `var2'
testcodebout18199.s:71: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:73: Error: no such instruction: `sum (Offset:1)'
testcodebout18199.s:75: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:77: Error: no such instruction: `sum (Offset:1)'
testcodebout18199.s:78: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:79: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:83: Error: symbol `ID' is already defined
testcodebout18199.s:83: Error: no such instruction: `sum (Offset:1)'
testcodebout18199.s:84: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:109: Error: too many memory references for `movq'
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-17.0:
interface ICalc:
	max1(int, int) : int
	max2(int, int) : int
	max3(int, int) : int
	gcd(int, int) : int
end;

class Class1 implements ICalc :

	method max1(a: int, b: int)
		if a < b then
			return b;
		else
			return a;
		end;
	end;
	
	method max2(a: int, b: int)
		var max : int := 0;
		if a < b then
			max := b;
		else 
			max := a;
		end;
		
		return max;
	end;
	
	method max3(a: int, b: int)
		var max : int := a;
		if a < b then
			max := b;
		end;
		
		return max;
	end;

	method gcd(a: int, b: int)
		if a = 0 then
			return a;
		end;
			
		while not (b = 0) do
			if b < a then
				a := a - b;
			else
				b := b - a;
			end;
		end;
		
		return a;
	end;
end;
Übersetzung: Status korrekt

Ausgabe:
=======================================
=======================================
=======================================

RET

          PARAM: b
=======================================
=======================================

RET

          PARAM: a
=======================================
=======================================

          0 

:=

          ID: max (Offset: 1) 
=======================================
=======================================
=======================================
=======================================

          PARAM: b

:=

          ID: max (Offset: 1) 
=======================================
=======================================

          PARAM: a

:=

          ID: max (Offset: 1) 
=======================================
=======================================

RET

          ID: max (Offset: 1) 
=======================================
=======================================

          PARAM: a

:=

          ID: max (Offset: 1) 
=======================================
=======================================
=======================================
=======================================

          PARAM: b

:=

          ID: max (Offset: 1) 
=======================================
=======================================

RET

          ID: max (Offset: 1) 
=======================================
=======================================
=======================================
=======================================

RET

          PARAM: a
=======================================
=======================================
=======================================
=======================================
=======================================
=======================================

                    PARAM: b

          -

                    PARAM: a

:=

          PARAM: a
=======================================
=======================================

                    PARAM: a

          -

                    PARAM: b

:=

          PARAM: b
=======================================
=======================================

RET

          PARAM: a
=======================================

.globl Class1
Class1:   
.quad Class1_max1
.quad Class1_max2
.quad Class1_max3
.quad Class1_gcd


Class1_max1:
	movq	%rdx, %rax
	ret
	movq	%rsi, %rax
	ret
Class1_max2:
	movq	$0, 8(%rsp)
	movq	%rdx, 8(%rsp)
	movq	%rsi, 8(%rsp)
	movq	8(%rsp), %rax
	ret
Class1_max3:
	movq	%rsi, 8(%rsp)
	movq	%rdx, 8(%rsp)
	movq	8(%rsp), %rax
	ret
Class1_gcd:
	movq	%rsi, %rax
	ret
	movq	%rsi, %rax
	movq	%rdx, %r11
	subq	%r11, %rax
	movq	%rax, %rsi
	movq	%rdx, %rax
	movq	%rsi, %r11
	subq	%r11, %rax
	movq	%rax, %rdx
	movq	%rsi, %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:2: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:3: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:7: Error: no such instruction: `b'
testcodebout18199.s:8: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:9: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:13: Error: symbol `PARAM' is already defined
testcodebout18199.s:13: Error: no such instruction: `a'
testcodebout18199.s:14: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:15: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:17: Error: junk at end of line, first unrecognized character is `0'
testcodebout18199.s:19: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:21: Error: no such instruction: `max (Offset:1)'
testcodebout18199.s:22: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:23: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:24: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:25: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:27: Error: symbol `PARAM' is already defined
testcodebout18199.s:27: Error: no such instruction: `b'
testcodebout18199.s:29: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:31: Error: no such instruction: `max (Offset:1)'
testcodebout18199.s:32: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:33: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:35: Error: symbol `PARAM' is already defined
testcodebout18199.s:35: Error: no such instruction: `a'
testcodebout18199.s:37: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:39: Error: no such instruction: `max (Offset:1)'
testcodebout18199.s:40: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:41: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:45: Error: symbol `ID' is already defined
testcodebout18199.s:45: Error: no such instruction: `max (Offset:1)'
testcodebout18199.s:46: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:47: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:49: Error: symbol `PARAM' is already defined
testcodebout18199.s:49: Error: no such instruction: `a'
testcodebout18199.s:51: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:53: Error: symbol `ID' is already defined
testcodebout18199.s:53: Error: no such instruction: `max (Offset:1)'
testcodebout18199.s:54: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:55: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:56: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:57: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:59: Error: symbol `PARAM' is already defined
testcodebout18199.s:59: Error: no such instruction: `b'
testcodebout18199.s:61: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:63: Error: symbol `ID' is already defined
testcodebout18199.s:63: Error: no such instruction: `max (Offset:1)'
testcodebout18199.s:64: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:65: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:69: Error: symbol `ID' is already defined
testcodebout18199.s:69: Error: no such instruction: `max (Offset:1)'
testcodebout18199.s:70: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:71: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:72: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:73: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:77: Error: symbol `PARAM' is already defined
testcodebout18199.s:77: Error: no such instruction: `a'
testcodebout18199.s:78: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:79: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:80: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:81: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:82: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:83: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:85: Error: symbol `PARAM' is already defined
testcodebout18199.s:85: Error: no such instruction: `b'
testcodebout18199.s:87: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:89: Error: symbol `PARAM' is already defined
testcodebout18199.s:89: Error: no such instruction: `a'
testcodebout18199.s:91: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:93: Error: symbol `PARAM' is already defined
testcodebout18199.s:93: Error: no such instruction: `a'
testcodebout18199.s:94: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:95: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:97: Error: symbol `PARAM' is already defined
testcodebout18199.s:97: Error: no such instruction: `a'
testcodebout18199.s:99: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:101: Error: symbol `PARAM' is already defined
testcodebout18199.s:101: Error: no such instruction: `b'
testcodebout18199.s:103: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:105: Error: symbol `PARAM' is already defined
testcodebout18199.s:105: Error: no such instruction: `b'
testcodebout18199.s:106: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:107: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:111: Error: symbol `PARAM' is already defined
testcodebout18199.s:111: Error: no such instruction: `a'
testcodebout18199.s:112: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-18.0:
interface Interface1:
	fib(int) : int
end;

class Class1 implements Interface1:
	method fib(i: int)
		var x0 : int := 0;
		var x1 : int := 1;
		
		while 0 < i do
			var tmp : int := x0;
			x0 := x1;
			x1 := x1 + tmp;
			
			i := i - 1;
		end;
		
		return x1;
	end;
end;
Übersetzung: Status korrekt

Ausgabe:
=======================================

          0 

:=

          ID: x0 (Offset: 1) 
=======================================
=======================================

          1 

:=

          ID: x1 (Offset: 2) 
=======================================
=======================================
=======================================
=======================================

          ID: x0 (Offset: 1) 

:=

          ID: tmp (Offset: 3) 
=======================================
=======================================

          ID: x1 (Offset: 2) 

:=

          ID: x0 (Offset: 1) 
=======================================
=======================================

                    ID: tmp (Offset: 3) 

          +

                    ID: x1 (Offset: 2) 

:=

          ID: x1 (Offset: 2) 
=======================================
=======================================

                    1 

          -

                    PARAM: i

:=

          PARAM: i
=======================================
=======================================

RET

          ID: x1 (Offset: 2) 
=======================================

.globl Class1
Class1:   
.quad Class1_fib


Class1_fib:
	movq	$0, 8(%rsp)
	movq	$1, 16(%rsp)
	movq	8(%rsp), 24(%rsp)
	movq	16(%rsp), 8(%rsp)
	movq	16(%rsp), %rax
	movq	24(%rsp), %r11
	addq	%r11, %rax
	movq	%rax, 16(%rsp)
	movq	%rsi, %rax
	subq	$1, %rax
	movq	%rax, %rsi
	movq	16(%rsp), %rax
	ret

Übersetze und linke das Testprogramm:
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:3: Error: junk at end of line, first unrecognized character is `0'
testcodebout18199.s:5: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:7: Error: no such instruction: `x0 (Offset:1)'
testcodebout18199.s:8: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:9: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:11: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:13: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:15: Error: no such instruction: `x1 (Offset:2)'
testcodebout18199.s:16: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:17: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:18: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:19: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:21: Error: no such instruction: `x0 (Offset:1)'
testcodebout18199.s:23: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:25: Error: no such instruction: `tmp (Offset:3)'
testcodebout18199.s:26: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:27: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:29: Error: no such instruction: `x1 (Offset:2)'
testcodebout18199.s:31: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:33: Error: no such instruction: `x0 (Offset:1)'
testcodebout18199.s:34: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:35: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:37: Error: no such instruction: `tmp (Offset:3)'
testcodebout18199.s:39: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:41: Error: no such instruction: `x1 (Offset:2)'
testcodebout18199.s:43: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:45: Error: no such instruction: `x1 (Offset:2)'
testcodebout18199.s:46: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:47: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:49: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:51: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:53: Error: no such instruction: `i'
testcodebout18199.s:55: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:57: Error: no such instruction: `i'
testcodebout18199.s:58: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:59: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:63: Error: symbol `ID' is already defined
testcodebout18199.s:63: Error: no such instruction: `x1 (Offset:2)'
testcodebout18199.s:64: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:74: Error: too many memory references for `movq'
testcodebout18199.s:75: Error: too many memory references for `movq'
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-19.0:
interface Interface1:
	set(int) : int
	get() : int
	construct() : Interface1
end;

class Class1 implements Interface1:
	var num : int;
	
	method set(a : int)
		num := a;
		return 0;
	end;
	
	method get()
		return num;
	end;
	
	method construct()
		return new Class1;
	end;
end;
/usr/ftp/pub/ubvl/test/codeb/test: line 34: 18620 Segmentation fault      $PROGRAM < $i > $RESFILE
Übersetzung: [Errot] Status=139. Erwartet: 0

Ausgabe:

Übersetze und linke das Testprogramm:
In file included from /usr/ftp/pub/ubvl/test/codeb/testmain.c:13:0:
/home/ublu21/u11808206/test/codeb/thenotoriousj-19.call: In function ‘call’:
/home/ublu21/u11808206/test/codeb/thenotoriousj-19.call:21:24: warning: comparison of distinct pointer types lacks a cast
  Class1.construct(obj) == reg15 && heapptr - reg15 == 2 && constructed->vftc == &Class1);
                        ^~
/tmp/ccTiW0jK.o: In function `call':
/home/ublu21/u11808206/test/codeb/thenotoriousj-19.call:13: undefined reference to `Class1'
/home/ublu21/u11808206/test/codeb/thenotoriousj-19.call:20: undefined reference to `Class1'
/home/ublu21/u11808206/test/codeb/thenotoriousj-19.call:20: undefined reference to `Class1'
/home/ublu21/u11808206/test/codeb/thenotoriousj-19.call:20: undefined reference to `Class1'
/home/ublu21/u11808206/test/codeb/thenotoriousj-19.call:21: undefined reference to `Class1'
/tmp/ccTiW0jK.o:/home/ublu21/u11808206/test/codeb/thenotoriousj-19.call:21: more undefined references to `Class1' follow
collect2: error: ld returned 1 exit status
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-20.0:
interface Interface1:
	add1(int) : int
	add2(int) : int
	add3(int) : int
	add4(int) : int
	mul(int) : int
	equal(int) : int
	sub1(int) : int
	sub2(int) : int
	less1(int) : int
	less2(int) : int
	constant() : int
end;

interface Interface2:
	getVar() : int
	getObjVar() : int
end;

class Class2 implements Interface2:
	var obj : int;
	
	method getVar()
		var x : int := 0DEADH * 0BEEFH;
		return x;
	end;
	method getObjVar()
		obj := 0DEADH * 0BEEFH;
		return obj;
	end;
end;

class Class1 implements Interface1 :
	method add1(in1: int)
		return ((1+2147483647)-1)+in1;
	end;
	method add2(in1: int)
		return in1+2147483647+1;
	end;
	method add3(in1: int)
		return ((0-2147483647)-1)+in1;
	end;
	method add4(in1: int)
		return (((0-2147483647)-1)-1)+in1;
	end;
	method mul(a: int)
		return a*0DEADH * 0BEEFH;
	end;
	
	method equal(a: int)
		return a = (0DEADH * 0BEEFH);
	end;
	
	method sub1(in1: int)
		return in1 - (0DEADH * 0BEEFH);
	end;
	method sub2(in1: int)
		return (0DEADH * 0BEEFH) - in1;
	end;
	
	method less1(in1: int)
		return in1 < (0DEADH * 0BEEFH);
	end;
	method less2(in1: int)
		return (0DEADH * 0BEEFH) < in1;
	end;
	
	method constant()
		return 0DEADH * 0BEEFH;
	end;
end;
Übersetzung: Status korrekt

Ausgabe:
=======================================

                    48879 

          *

                    57005 

:=

          ID: x (Offset: 1) 
=======================================
=======================================

RET

          ID: x (Offset: 1) 
=======================================
=======================================

                    48879 

          *

                    57005 

:=

          CVAR: obj
=======================================
=======================================

RET

          CVAR: obj
=======================================
=======================================

RET

                    PARAM: in1

          +

                              1 

                    -

                                        2147483647 

                              +

                                        1 
=======================================
=======================================

RET

                              1 

                    +

                              2147483647 

          +

                    PARAM: in1
=======================================
=======================================

RET

                    PARAM: in1

          +

                              1 

                    -

                                        2147483647 

                              -

                                        0 
=======================================
=======================================

RET

                    PARAM: in1

          +

                              1 

                    -

                                        1 

                              -

                                                  2147483647 

                                        -

                                                  0 
=======================================
=======================================

RET

                              48879 

                    *

                              57005 

          *

                    PARAM: a
=======================================
=======================================

RET

                              48879 

                    *

                              57005 

          =

                    PARAM: a
=======================================
=======================================

RET

                              48879 

                    *

                              57005 

          -

                    PARAM: in1
=======================================
=======================================

RET

                    PARAM: in1

          -

                              48879 

                    *

                              57005 
=======================================
=======================================

RET

                              48879 

                    *

                              57005 

          <

                    PARAM: in1
=======================================
=======================================

RET

                    PARAM: in1

          <

                              48879 

                    *

                              57005 
=======================================
=======================================

RET

                    48879 

          *

                    57005 
=======================================

.globl Class2
Class2:   
.quad 0 #add1
.quad 0 #add2
.quad 0 #add3
.quad 0 #add4
.quad 0 #mul
.quad 0 #equal
.quad 0 #sub1
.quad 0 #sub2
.quad 0 #less1
.quad 0 #less2
.quad 0 #constant
.quad Class2_getVar
.quad Class2_getObjVar



.globl Class1
Class1:   
.quad Class1_add1
.quad Class1_add2
.quad Class1_add3
.quad Class1_add4
.quad Class1_mul
.quad Class1_equal
.quad Class1_sub1
.quad Class1_sub2
.quad Class1_less1
.quad Class1_less2
.quad Class1_constant
.quad 0 #getVar
.quad 0 #getObjVar


Class2_getVar:
	movq	$57005, %rax
	imulq	$48879, %rax
	movq	%rax, 8(%rsp)
	movq	8(%rsp), %rax
	ret
Class2_getObjVar:
	movq	$57005, %rax
	imulq	$48879, %rax
	movq	%rax, 8(%rdi)
	movq	8(%rdi), %rax
	ret
Class1_add1:
	movq	$1, %rax
	addq	$2147483647, %rax
	subq	$1, %rax
	movq	%rsi, %r11
	addq	%r11, %rax
	ret
Class1_add2:
	movq	%rsi, %rax
	movq	$2147483647, %r11
	addq	$1, %r11
	addq	%r11, %rax
	ret
Class1_add3:
	movq	$2147483647, %r11
	movq	$0, %rax
	subq	%r11, %rax
	subq	$1, %rax
	movq	%rsi, %r11
	addq	%r11, %rax
	ret
Class1_add4:
	movq	$2147483647, %r11
	movq	$0, %rax
	subq	%r11, %rax
	subq	$1, %rax
	subq	$1, %rax
	movq	%rsi, %r11
	addq	%r11, %rax
	ret
Class1_mul:
	movq	%rsi, %rax
	movq	$57005, %r11
	imulq	$48879, %r11
	imulq	%r11, %rax
	ret
Class1_equal:
	movq	%rsi, %rax
	movq	$57005, %r11
	imulq	$48879, %r11
	cmpq	%rax, %r11	# checking if rax equals r11
	sete	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret
Class1_sub1:
	movq	%rsi, %rax
	movq	$57005, %r11
	imulq	$48879, %r11
	subq	%r11, %rax
	ret
Class1_sub2:
	movq	$57005, %rax
	imulq	$48879, %rax
	movq	%rsi, %r11
	subq	%r11, %rax
	ret
Class1_less1:
	movq	%rsi, %rax
	movq	$57005, %r11
	imulq	$48879, %r11
	cmpq	%rax, %r11	# checking if rax less r11
	setg	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret
Class1_less2:
	movq	$57005, %rax
	imulq	$48879, %rax
	movq	%rsi, %r11
	cmpq	%rax, %r11	# checking if rax less r11
	setg	%al
	and	$1, %rax
	imulq	$-1, %rax
	ret
Class1_constant:
	movq	$57005, %rax
	imulq	$48879, %rax
	ret

Übersetze und linke das Testprogramm:
In file included from /usr/ftp/pub/ubvl/test/codeb/testmain.c:13:0:
/home/ublu21/u11808206/test/codeb/thenotoriousj-20.call: In function ‘call’:
/home/ublu21/u11808206/test/codeb/thenotoriousj-20.call:65:19: warning: passing argument 1 of ‘Class2.getObjVar’ from incompatible pointer type [-Wincompatible-pointer-types]
  Class2.getObjVar(obj2) == dead*beef
                   ^~~~
/home/ublu21/u11808206/test/codeb/thenotoriousj-20.call:65:19: note: expected ‘struct objectc *’ but argument is of type ‘struct object2 *’
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:3: Error: junk at end of line, first unrecognized character is `4'
testcodebout18199.s:5: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `5'
testcodebout18199.s:9: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:11: Error: no such instruction: `x (Offset:1)'
testcodebout18199.s:12: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:13: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:17: Error: symbol `ID' is already defined
testcodebout18199.s:17: Error: no such instruction: `x (Offset:1)'
testcodebout18199.s:18: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:19: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:21: Error: junk at end of line, first unrecognized character is `4'
testcodebout18199.s:23: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:25: Error: junk at end of line, first unrecognized character is `5'
testcodebout18199.s:27: Error: junk at end of line, first unrecognized character is `:'
testcodebout18199.s:29: Error: no such instruction: `obj'
testcodebout18199.s:30: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:31: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:35: Error: symbol `CVAR' is already defined
testcodebout18199.s:35: Error: no such instruction: `obj'
testcodebout18199.s:36: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:37: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:41: Error: no such instruction: `in1'
testcodebout18199.s:43: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:45: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:47: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:49: Error: junk at end of line, first unrecognized character is `2'
testcodebout18199.s:51: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:53: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:54: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:55: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:59: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:61: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:63: Error: junk at end of line, first unrecognized character is `2'
testcodebout18199.s:65: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:67: Error: symbol `PARAM' is already defined
testcodebout18199.s:67: Error: no such instruction: `in1'
testcodebout18199.s:68: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:69: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:73: Error: symbol `PARAM' is already defined
testcodebout18199.s:73: Error: no such instruction: `in1'
testcodebout18199.s:75: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:77: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:79: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:81: Error: junk at end of line, first unrecognized character is `2'
testcodebout18199.s:83: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:85: Error: junk at end of line, first unrecognized character is `0'
testcodebout18199.s:86: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:87: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:91: Error: symbol `PARAM' is already defined
testcodebout18199.s:91: Error: no such instruction: `in1'
testcodebout18199.s:93: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:95: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:97: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:99: Error: junk at end of line, first unrecognized character is `1'
testcodebout18199.s:101: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:103: Error: junk at end of line, first unrecognized character is `2'
testcodebout18199.s:105: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:107: Error: junk at end of line, first unrecognized character is `0'
testcodebout18199.s:108: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:109: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:113: Error: junk at end of line, first unrecognized character is `4'
testcodebout18199.s:115: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:117: Error: junk at end of line, first unrecognized character is `5'
testcodebout18199.s:119: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:121: Error: symbol `PARAM' is already defined
testcodebout18199.s:121: Error: no such instruction: `a'
testcodebout18199.s:122: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:123: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:127: Error: junk at end of line, first unrecognized character is `4'
testcodebout18199.s:129: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:131: Error: junk at end of line, first unrecognized character is `5'
testcodebout18199.s:133: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:135: Error: symbol `PARAM' is already defined
testcodebout18199.s:135: Error: no such instruction: `a'
testcodebout18199.s:136: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:137: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:141: Error: junk at end of line, first unrecognized character is `4'
testcodebout18199.s:143: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:145: Error: junk at end of line, first unrecognized character is `5'
testcodebout18199.s:147: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:149: Error: symbol `PARAM' is already defined
testcodebout18199.s:149: Error: no such instruction: `in1'
testcodebout18199.s:150: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:151: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:155: Error: symbol `PARAM' is already defined
testcodebout18199.s:155: Error: no such instruction: `in1'
testcodebout18199.s:157: Error: junk at end of line, first unrecognized character is `-'
testcodebout18199.s:159: Error: junk at end of line, first unrecognized character is `4'
testcodebout18199.s:161: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:163: Error: junk at end of line, first unrecognized character is `5'
testcodebout18199.s:164: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:165: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:169: Error: junk at end of line, first unrecognized character is `4'
testcodebout18199.s:171: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:173: Error: junk at end of line, first unrecognized character is `5'
testcodebout18199.s:175: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:177: Error: symbol `PARAM' is already defined
testcodebout18199.s:177: Error: no such instruction: `in1'
testcodebout18199.s:178: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:179: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:183: Error: symbol `PARAM' is already defined
testcodebout18199.s:183: Error: no such instruction: `in1'
testcodebout18199.s:185: Error: junk at end of line, first unrecognized character is `<'
testcodebout18199.s:187: Error: junk at end of line, first unrecognized character is `4'
testcodebout18199.s:189: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:191: Error: junk at end of line, first unrecognized character is `5'
testcodebout18199.s:192: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:193: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:197: Error: junk at end of line, first unrecognized character is `4'
testcodebout18199.s:199: Error: junk at end of line, first unrecognized character is `*'
testcodebout18199.s:201: Error: junk at end of line, first unrecognized character is `5'
testcodebout18199.s:202: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-3.0:
interface Interface1: 
	empty():Interface1
	single():int
	add2(int, int) : int
	fact(int, int) : int
end;

Übersetzung: Status korrekt

Ausgabe:

Übersetze und linke das Testprogramm:

Rufe folgendes Codefragment auf:

Erzeugter Code verhaelt sich bezueglich Signal-Erzeugung wie erwartet
und das Ergebnis des Ausdrucks ist korrekt.

==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-4.0:
interface Interface1:
	init():int
	add2(int, int, int) : int
	add3(int, int) : int
end;

interface Interface2: 
	empty():int
	single():int
	getThis() : int
	ident(int) : int
end;

class Class1 implements /* nothing */ :
	var var1 : int;
	var var2 : int;
	var var3 : Interface2;
	
	method init()
		return 0;
	end;
end;

class Class2 implements Interface1 Interface2 :
	var var1 : int;
	var var2 : int;
	method init()
		return 0;
	end;
	method add2(in1: int, in2: int)
		return in1+in2;
	end;
	method add3(in1: int, in2: int, in3: int)
		return in1 + in2 + in3;
	end;
	method empty()
		/* Stats */
	end;
	method getThis()
		return this;
	end;
	method ident(n : int)
		return n;
	end;
end;

Übersetzung: Status korrekt

Ausgabe:
=======================================

RET

          0 
=======================================
=======================================

RET

          0 
=======================================
=======================================

RET

                    PARAM: in2

          +

                    PARAM: in1
=======================================
=======================================

RET

                              PARAM: in3

                    +

                              PARAM: in2

          +

                    PARAM: in1
=======================================
=======================================

RET

          THIS
=======================================
=======================================

RET

          PARAM: n
=======================================

.globl Class1
Class1:   
.quad Class1_init
.quad 0 #add2
.quad 0 #add3
.quad 0 #empty
.quad 0 #single
.quad 0 #getThis
.quad 0 #ident



.globl Class2
Class2:   
.quad Class2_init
.quad Class2_add2
.quad Class2_add3
.quad Class2_empty
.quad 0 #single
.quad Class2_getThis
.quad Class2_ident


Class1_init:
	movq	$0, %rax
	ret
Class2_init:
	movq	$0, %rax
	ret
Class2_add2:
	movq	%rsi, %rax
	movq	%rdx, %r11
	addq	%r11, %rax
	ret
Class2_add3:
	movq	%rsi, %rax
	movq	%rdx, %r11
	movq	%rcx, %r10
	addq	%r10, %r11
	addq	%r11, %rax
	ret
Class2_empty:
Class2_getThis:
	movq	%rdi, %rax
	ret
Class2_ident:
	movq	%rsi, %rax
	ret

Übersetze und linke das Testprogramm:
In file included from /usr/ftp/pub/ubvl/test/codeb/testmain.c:13:0:
/home/ublu21/u11808206/test/codeb/thenotoriousj-4.call: In function ‘call’:
/home/ublu21/u11808206/test/codeb/thenotoriousj-4.call:28:40: warning: passing argument 1 of ‘Class1.init’ makes pointer from integer without a cast [-Wint-conversion]
 RET(Class1.init(0) == 0 && Class1.init(-3)==0 && Class1.init(5)==0 &&
                                        ^
/home/ublu21/u11808206/test/codeb/thenotoriousj-4.call:28:40: note: expected ‘struct objectc *’ but argument is of type ‘int’
/home/ublu21/u11808206/test/codeb/thenotoriousj-4.call:28:62: warning: passing argument 1 of ‘Class1.init’ makes pointer from integer without a cast [-Wint-conversion]
 RET(Class1.init(0) == 0 && Class1.init(-3)==0 && Class1.init(5)==0 &&
                                                              ^
/home/ublu21/u11808206/test/codeb/thenotoriousj-4.call:28:62: note: expected ‘struct objectc *’ but argument is of type ‘int’
/home/ublu21/u11808206/test/codeb/thenotoriousj-4.call:29:38: warning: passing argument 1 of ‘Class2.init’ makes pointer from integer without a cast [-Wint-conversion]
   Class2.init(0) == 0 && Class2.init(-3)==0 && Class2.init(5)==0 &&
                                      ^
/home/ublu21/u11808206/test/codeb/thenotoriousj-4.call:29:38: note: expected ‘struct objectc *’ but argument is of type ‘int’
/home/ublu21/u11808206/test/codeb/thenotoriousj-4.call:29:60: warning: passing argument 1 of ‘Class2.init’ makes pointer from integer without a cast [-Wint-conversion]
   Class2.init(0) == 0 && Class2.init(-3)==0 && Class2.init(5)==0 &&
                                                            ^
/home/ublu21/u11808206/test/codeb/thenotoriousj-4.call:29:60: note: expected ‘struct objectc *’ but argument is of type ‘int’
/home/ublu21/u11808206/test/codeb/thenotoriousj-4.call:30:44: warning: passing argument 1 of ‘Class2.getThis’ makes pointer from integer without a cast [-Wint-conversion]
   Class2.getThis(0) == 0 && Class2.getThis(-3)==-3 && Class2.getThis(5)==5 &&
                                            ^
/home/ublu21/u11808206/test/codeb/thenotoriousj-4.call:30:44: note: expected ‘struct objectc *’ but argument is of type ‘int’
/home/ublu21/u11808206/test/codeb/thenotoriousj-4.call:30:70: warning: passing argument 1 of ‘Class2.getThis’ makes pointer from integer without a cast [-Wint-conversion]
   Class2.getThis(0) == 0 && Class2.getThis(-3)==-3 && Class2.getThis(5)==5 &&
                                                                      ^
/home/ublu21/u11808206/test/codeb/thenotoriousj-4.call:30:70: note: expected ‘struct objectc *’ but argument is of type ‘int’
testcodebout18199.s: Assembler messages:
testcodebout18199.s:1: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:5: Error: junk at end of line, first unrecognized character is `0'
testcodebout18199.s:6: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:7: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:11: Error: junk at end of line, first unrecognized character is `0'
testcodebout18199.s:12: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:13: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:17: Error: no such instruction: `in2'
testcodebout18199.s:19: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:21: Error: no such instruction: `in1'
testcodebout18199.s:22: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:23: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:27: Error: symbol `PARAM' is already defined
testcodebout18199.s:27: Error: no such instruction: `in3'
testcodebout18199.s:29: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:31: Error: symbol `PARAM' is already defined
testcodebout18199.s:31: Error: no such instruction: `in2'
testcodebout18199.s:33: Error: junk at end of line, first unrecognized character is `+'
testcodebout18199.s:35: Error: symbol `PARAM' is already defined
testcodebout18199.s:35: Error: no such instruction: `in1'
testcodebout18199.s:36: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:37: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:41: Error: no such instruction: `this'
testcodebout18199.s:42: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:43: Error: junk at end of line, first unrecognized character is `='
testcodebout18199.s:47: Error: symbol `PARAM' is already defined
testcodebout18199.s:47: Error: no such instruction: `n'
testcodebout18199.s:48: Error: junk at end of line, first unrecognized character is `='
[Error] Erzeugter Code konnte nicht assembliert und gelinkt werden.
==========> Eingabe von /usr/ftp/pub/ubvl/test/codeb/x0.1:
#

Ausgabe:
ERROR on line 1 Can not lex the symbol: #
Status: korrekt

==========> Eingabe von /usr/ftp/pub/ubvl/test/codeb/x1.1:
interface x: y():int end;
class z implements x:
  method y() return 1 /* */  */

Ausgabe:
ERROR on line 1 Can not lex the symbol: /
Status: korrekt

==========> Eingabe von /usr/ftp/pub/ubvl/test/codeb/y0.2:
interface x: end;
class y implements x: end

Ausgabe:
Error parsing line: 1 char: 
syntax error
Status: korrekt

==========> Eingabe von /usr/ftp/pub/ubvl/test/codeb/z0.3:
class y implements x: end;

Ausgabe:
Identifier with name 'x' on line 1 is not visible in the current scope
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_300.3:
interface myInterface:
    testMethod(): int
end;

class ObjectvariableClass implements myInterface:
    method testMethod()
        return global; /* FAIL */
    end;
end;
Ausgabe:
Identifier with name 'global' on line 1 is not visible(ObjectVar,Var,Param) in the current scope
=======================================

RET
=======================================
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_301.3:
interface myInterface:
    testMethod(): int
end;

class ObjectvariableClass implements myInterface:
    var global:int;

    method testMethod()
        var global:int := 5; /* FAIL */
        return global;
    end;
end;
Ausgabe:
Identifier 'global' on line 1 conflicts with identifier [global] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_302.3:
interface myInterface:
    testMethod(): int
end;

class ObjectvariableClass implements myInterface:
    method failMethod()
        return 5; /* FAIL */
    end;
end;
Ausgabe:
Identifier with name 'failMethod' on line 1 is not visible in the current scope
=======================================

RET

          5 
=======================================
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_303.3:
interface myInterface:
    testMethod(): int
end;

class ObjectvariableClass implements myInterface fail: /* FAIL */
    method testMethod()
        return 5; 
    end;
end;
Ausgabe:
Identifier with name 'fail' on line 1 is not visible in the current scope
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_304.3:
interface myInterface:
    testMethod(): int
end;

class ObjectvariableClass implements myInterface:
    method testMethod()
        null ObjectvariableClass; /* FAIL */
        return 5; 
    end;
end;
Ausgabe:
Identifier with name 'ObjectvariableClass' on line 1 is not visible in the current scope
=======================================
=======================================
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_305.3:
interface myInterface:
    testMethod(): int
end;

class ObjectvariableClass implements myInterface:
    method testMethod()
        myInterface := 5; /* FAIL */
        return 5; 
    end;
end;
Ausgabe:
Identifier with name 'myInterface' on line 1 is not visible(ObjectVar,Var,Param) in the current scope
=======================================

          5 

:=
=======================================
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_306.3:
interface myInterface:
    testMethod(): int
end;

class MyClass implements myInterface:
    var global:int;

    method testMethod()
        global := new global;
        return global;
    end;
end;
Ausgabe:
Identifier with name 'global' on line 1 is not visible in the current scope
=======================================

:=

          CVAR: global
=======================================
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_307.3:
interface x: 
s():int 
z(int):int 
end; 
interface u: 
end;

interface d: 
y():int 
end;

class b implements:

end;

class c implements d:
    var a:int;
    method y()
        var a : d := 5; /* FAIL */
    end;
end;
Ausgabe:
Identifier 'a' on line 1 conflicts with identifier [a] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_308.3:
interface LinkedList:
    add(Object): int
    get(int): Object
    size(): int
end;

class MyLinkedList implements LinkedList:
    var next:LinkedList;
    var head:Object;    /* FAIL */

    method add(o:Object)
        if head = null LinkedList then /* Absolut keine Ahnung ob das mit null so funken wird, aber ist momentan korrekt */
            head := o;
            return 0;
        else 
            if head.getId() = o.getId() then
                return 1;
            else
                if next = null LinkedList then
                    next := new MyLinkedList;
                end;
            end;
        end;

        return next.add(o);
    end;

    method get(i:int)
        if i = 0 then
            return head;
        else
            if next = null LinkedList then
                return null Object;
            end;
        end;

        return next.get(i-1);
    end;

    method size()
        if head = null Object then
            return 0;
        end;
        
        if next = null Object then
            return 1;
        end;

        return 1 + next.size();
    end;
end;
Ausgabe:
Identifier with name 'Object' on line 1 is not visible in the current scope
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_309.3:
interface Object:
    getId(): int 
end;

interface LinkedList:
    add(Object): int
    get(int): Object
    size(): int
end;

class MyLinkedList implements LinkedList:
    var next:LinkedList;
    var head:Object;

    method add(o:Object)
        if head = null LinkedList then /* Absolut keine Ahnung ob das mit null so funken wird, aber ist momentan korrekt */
            head := o;
            return 0;
        else 
            if head.getId() = o.getId() then
                return 1;
            else
                if next = null LinkedList then
                    next := new MyLinkedList;
                end;
            end;
        end;

        return next.add(p); /* FAIL */
    end;

    method get(i:int)
        if i = 0 then
            return head;
        else
            if next = null LinkedList then
                return null Object;
            end;
        end;

        return next.get(i-1);
    end;

    method size()
        if head = null Object then
            return 0;
        end;
        
        if next = null Object then
            return 1;
        end;

        return 1 + next.size();
    end;
end;
Ausgabe:
Identifier with name 'p' on line 1 is not visible(ObjectVar,Var,Param) in the current scope
=======================================
=======================================
=======================================

          PARAM: o

:=

          CVAR: head
=======================================
=======================================

RET

          0 
=======================================
=======================================
=======================================
=======================================

RET

          1 
=======================================
=======================================
=======================================
=======================================

:=

          CVAR: next
=======================================
=======================================

RET
=======================================
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_310.3:
interface a:
    b(int,a):a
end;

class c implements a:
    method b(e:int, f:a)
        return d; /* FAIL */
    end;

    var d:a;
end;
Ausgabe:
Identifier with name 'd' on line 1 is not visible(ObjectVar,Var,Param) in the current scope
=======================================

RET
=======================================
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_311.3:
interface a:end;
interface a:end; /* FAIL */
Ausgabe:
Identifier 'a' on line 1 conflicts with identifier [a] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_312.3:
class a implements:end;
class a implements:end; /* FAIL */
Ausgabe:
Identifier 'a' on line 1 conflicts with identifier [a] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_314.3:
interface myInterface:
    myMethod(int,myInterface):myInterface
end;

class myClass implements myInterface:
    method myMethod(par1:int, par2:myInterface)
        if 0 = 1 then
            var fail : int := 0;
        else
            return this.myMethod(fail, par2); /* FAIL */
        end;
    end;
end;
Ausgabe:
Identifier with name 'fail' on line 1 is not visible(ObjectVar,Var,Param) in the current scope
=======================================
=======================================
=======================================

          0 

:=

          ID: fail (Offset: 1) 
=======================================
=======================================

RET
=======================================
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_315.3:
interface a:
    b():int
end;

class one implements a:
    var v1:int;
    method b()
        v1 := 27;
    end;
end;

class two implements a:
    method b()
        var x:a := new one;
        return x.v1();
    end;
end;
Ausgabe:
Identifier with name 'v1' on line 1 is not visible in the current scope
=======================================

          27 

:=

          CVAR: v1
=======================================
=======================================

:=

          ID: x (Offset: 1) 
=======================================
=======================================

RET
=======================================
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_316.3:
interface a:
    b(int, int):a
    d(int, int):a
end;

class c implements a:
    var d:a;

    method b(e:int, f:int)
        return 5 * (e + f);
    end;
end;
Ausgabe:
Identifier 'd' on line 1 conflicts with identifier [d] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_317.3:
interface a:
    b():int
end;

class one implements a:
    var v1:int;
    method b()
        v1 := 27;
    end;
end;

class two implements a:
    method b()
        var x:a := new one;
        return v1;
    end;
end;
Ausgabe:
Identifier with name 'v1' on line 1 is not visible(ObjectVar,Var,Param) in the current scope
=======================================

          27 

:=

          CVAR: v1
=======================================
=======================================

:=

          ID: x (Offset: 1) 
=======================================
=======================================

RET
=======================================
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Andy0n_318.3:
interface a:
    test():a
    test():a
end;
Ausgabe:
Identifier 'test' on line 1 conflicts with identifier [test] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Dappzydee.1.3:
interface myInterface:
    testMethod(): int
end;

class ObjectvariableClass implements myInterface:
    method testMethod()
         return testMethod; /* FAIL */
    end;
end;

Ausgabe:
Identifier with name 'testMethod' on line 1 is not visible(ObjectVar,Var,Param) in the current scope
=======================================

RET
=======================================
/usr/ftp/pub/ubvl/test/codeb/test: line 125: test: 1.3: integer expression expected
[Error] Status: 3. Erwartet: 1.3

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_Dappzydee.2.3:
interface myInterface:
    testMethod(): int
end;

class ObjectvariableClass implements myInterface:
    method testMethod()
        var tmp : int := 0;
        tmp = testMethod; /* FAIL */
    end;
end;

Ausgabe:
Identifier with name 'testMethod' on line 1 is not visible(ObjectVar,Var,Param) in the current scope
=======================================

          0 

:=

          ID: tmp (Offset: 1) 
=======================================
=======================================
=======================================
/usr/ftp/pub/ubvl/test/codeb/test: line 125: test: 2.3: integer expression expected
[Error] Status: 3. Erwartet: 2.3

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_crazyjack.1.3:
interface a1:
end;
interface a2:
    a3(int, int):int
    a6(a2, a2):int
    a5(a1, a2):int
end;
interface a32:
    a27(a1, a2):int
end;
class hello implements a32 a2:
    var bobbi: a1;
    var number1: int;
    var bobbi2: int;
    method a27()
        if bobbi < bobbi2
        then
            bobbi := 123;
        end;
    end;
    var katzi: int;
end;
interface b2:
    a55(a2, a2):int
end;
class hello2 implements a2 a1:
    var bobbi: a1;
    var bobbi2: int;
    method a27(number33: int)
        if bobbi < bobbi2
        then
            bobbi := 123;
        end;
        var number1: int := 23;
        not null INVALID;
    end;
    var katzi: int;
    var number1: int;
end;
Ausgabe:
Identifier with name 'INVALID' on line 1 is not visible in the current scope
=======================================
=======================================
=======================================

          123 

:=

          CVAR: bobbi
=======================================
=======================================
=======================================
=======================================

          123 

:=

          CVAR: bobbi
=======================================
=======================================

          23 

:=

          ID: number1 (Offset: 1) 
=======================================
=======================================
=======================================
/usr/ftp/pub/ubvl/test/codeb/test: line 125: test: 1.3: integer expression expected
[Error] Status: 3. Erwartet: 1.3

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_crazyjack.10.3:
interface i:
    a():int
end;
class b implements:
    var hallo: int;
    method a()
        new x; /* FAIL */
    end;
end;
Ausgabe:
Identifier with name 'x' on line 1 is not visible in the current scope
=======================================
=======================================
/usr/ftp/pub/ubvl/test/codeb/test: line 125: test: 10.3: integer expression expected
[Error] Status: 3. Erwartet: 10.3

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_crazyjack.11.3:
interface i:
    a():int
end;
class b implements:
    var hallo: int;
    method a()
        new x; /* FAIL */
    end;
end;
class x implements:
    var hallo: int;
    method a()
    end;
end;
Ausgabe:
Identifier with name 'x' on line 1 is not visible in the current scope
=======================================
=======================================
/usr/ftp/pub/ubvl/test/codeb/test: line 125: test: 11.3: integer expression expected
[Error] Status: 3. Erwartet: 11.3

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_crazyjack.3.3:
interface a:
    b(int, int):int
end;
class hello implements a:
    method b()
        this.a(); /* FAIL */
    end;
end;
Ausgabe:
Identifier with name 'a' on line 1 is not visible in the current scope
=======================================
=======================================
/usr/ftp/pub/ubvl/test/codeb/test: line 125: test: 3.3: integer expression expected
[Error] Status: 3. Erwartet: 3.3

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_crazyjack.5.3:
interface a1:
    b(int, int):int
end;
class hello implements:
    method b()
        this.b2(); /* fail */
    end;
end;
interface a2:
    b2(int, int):int
end;
Ausgabe:
Identifier with name 'b2' on line 1 is not visible in the current scope
=======================================
=======================================
/usr/ftp/pub/ubvl/test/codeb/test: line 125: test: 5.3: integer expression expected
[Error] Status: 3. Erwartet: 5.3

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_crazyjack.6.3:
interface i:
    a():int
end;
class x implements:
    method a()
        a23; /* FAIL */
    end;
end;
Ausgabe:
Identifier with name 'a23' on line 1 is not visible(ObjectVar,Var,Param) in the current scope
=======================================
=======================================
/usr/ftp/pub/ubvl/test/codeb/test: line 125: test: 6.3: integer expression expected
[Error] Status: 3. Erwartet: 6.3

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_crazyjack.8.3:
interface i:
    a():int
end;
class x implements:
    method a()
        hallo := 3; /* FAIL */
    end;
end;
Ausgabe:
Identifier with name 'hallo' on line 1 is not visible(ObjectVar,Var,Param) in the current scope
=======================================

          3 

:=
=======================================
/usr/ftp/pub/ubvl/test/codeb/test: line 125: test: 8.3: integer expression expected
[Error] Status: 3. Erwartet: 8.3

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_gutti-6.3:
class Foo implements Bar: /*Bar ist noch nicht sichtbar*/
    var x: Bar;
    method nochNichtSichtbar(x:int,bar:Bar)
        not 42;
    end;
end;

interface Bar:
    nochNichtSichtbar(int,Bar):Bar
end;


Ausgabe:
Identifier 'x' on line 1 conflicts with identifier [x] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_gutti-7.3:
interface Fail:
    methode(int,Fail): int
    funktion(Fail,Fail,Fail): int
end;

class Failed implements Fail:
    method methode(x: int, y: Fail) 
        x+y;
        while this do
            x := null Fail;
        end;
    end;

    method hilfsFail()
    end;

    method funktion(x: Fail, y: Fail, z: Fail)
        x*y*z;
        return y*x*z;
    end;

end;
Ausgabe:
Identifier with name 'hilfsFail' on line 1 is not visible in the current scope
=======================================
=======================================
=======================================
=======================================
=======================================

          NULLOP

:=

          PARAM: x
=======================================
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_gutti-8.3:
interface Test:
    function(int,int,Test):Test
end;

class Failing implements Test:
    method function(x:int, y:int, z:Test)
        if x = y then
            z.function(x,y,z);
            return new Failing;
        else
            return failVariable;
        end;
    end;

    var failVariable: Test;
end;


Ausgabe:
Identifier with name 'failVariable' on line 1 is not visible(ObjectVar,Var,Param) in the current scope
=======================================
=======================================
=======================================
=======================================
=======================================

RET
=======================================
=======================================

RET
=======================================
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_stimitom1.3:
interface Interf0 :
end;

interface Interf1:
    initialize(): int
    testNonsensicalStuff(int): Interf0
end;

class Somename implements Interf0 :
end;

class OtherName implements Interf1 :
    var count : int;
    method initialize()
        count := 15;
    end;
    method testNonsensicalStuff(par : int)   
        if not this then
            while (par < 25) do
                count := count * 5;
                if null Interf0 then
                    count := count * 5;
                else 
                    return new Interf1;
                    /* should throw an error here */
                end;
            end;
        end;
    end;
end;
Ausgabe:
Identifier with name 'Interf1' on line 1 is not visible in the current scope
=======================================

          15 

:=

          CVAR: count
=======================================
=======================================
=======================================
=======================================
=======================================
=======================================

                    5 

          *

                    CVAR: count

:=

          CVAR: count
=======================================
=======================================
=======================================
=======================================

                    5 

          *

                    CVAR: count

:=

          CVAR: count
=======================================
=======================================

RET
=======================================
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_thenotoriousj-1.3:
interface Interface1:
	init():int
	add3(int, int, int) : int
end;

interface Interface1: 
	empty():int
	single():int
	add2(int, int) : int
	fact(int, int) : int
end;

Ausgabe:
Identifier 'Interface1' on line 1 conflicts with identifier [Interface1] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_thenotoriousj-10.3:
interface Interface1:
	init():int
	add3(int, int, int) : int
end;

class Class1 implements /* nothing */ :
	var var1 : int;
	var var2 : int;
	var var3 : Interface1;
end;

interface Interface2: 
	empty():int
	single():int
	add2(int, int) : int
	add3(int, int) : int
end;

class Class2 implements Interface1 Interface2 :
	var var1 : int;
	var var2 : int;
	method init()
		var zero : int := 0H;
		var1 := (zero);
		var2 := zero;
		return 0;
	end;
	method add2(in1: int, in2: int)
		return in1+in2;
	end;
	method add3(in1: int, in2: int, in3: int)
		return in1 + this.add2(in2, in3);
	end;
	method empty()
		/* Stats */
	end;
	method single()
		return this;
	end;
	method fact(n : int)
		if n < 0 then
			return 0;
		end;
		
		var fac : int := 1;
		var i : int := n;
		
		while (0 < i) do
			fac := fac * i;
		end;
		
		return fac;
		
	end;
end;

Ausgabe:
Identifier 'add3' on line 1 conflicts with identifier [add3] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_thenotoriousj-2.3:
class Interface1 implements :
end;

interface Interface1: 
	empty():int
	single():int
	add2(int, int) : int
	fact(int, int) : int
end;

Ausgabe:
Identifier 'Interface1' on line 1 conflicts with identifier [Interface1] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_thenotoriousj-5.3:
interface Interface1:
	init():int
	add3(int, int, int) : int
end;

interface Interface2: 
	empty():int
	single():int
	add2(int, int) : int
end;

class Class1 implements /* nothing */ :
	var var1 : int;
	var var2 : int;
end;

class Class1 implements Interface1 Interface2 :
	var var1 : int;
	var var2 : int;
	method init()
		var zero : int := 0H;
		var1 := (zero);
		var2 := zero;
		return 0;
	end;
	method add2(in1: int, in2: int)
		return in1+in2;
	end;
	method add3(in1: int, in2: int)
		return in1 + this.add2(in2, in3);
	end;
	method empty()
		/* Stats */
	end;
	method single()
		return this;
	end;
	method fact(n : int)
		if n < 0 then
			return 0;
		end;
		
		var fac : int := 1;
		var i : int := n;
		
		while (0 < i) do
			fac := fac * i;
		end;
		
		return fac;
		
	end;
end;

Ausgabe:
Identifier 'Class1' on line 1 conflicts with identifier [Class1] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_thenotoriousj-6.3:
interface Interface1:
	init():int
	add3(int, int, int) : int
end;

interface Interface2: 
	empty():int
	single():int
	add2(int, int) : int
end;

class Class1 implements /* nothing */ :
	var var1 : int;
	var var2 : int;
end;

class Class2 implements Interface1 Interface2 :
	var var1 : int;
	var var2 : int;
	method init()
		var zero : int := 0H;
		var1 := (zero);
		var2 := zero;
		return 0;
	end;
	method add2(in1: int, in1: int)
		return in1+in2;
	end;
	method add3(in1: int, in2: int)
		return in1 + this.add2(in2, in3);
	end;
	method empty()
		/* Stats */
	end;
	method single()
		return this;
	end;
	method fact(n : int)
		if n < 0 then
			return 0;
		end;
		
		var fac : int := 1;
		var i : int := n;
		
		while (0 < i) do
			fac := fac * i;
		end;
		
		return fac;
		
	end;
end;

Ausgabe:
Identifier 'in1' on line 1 conflicts with identifier [in1] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_thenotoriousj-7.3:
interface Interface1:
	init():int
	add3(int, int, int) : int
end;

interface Interface2: 
	empty():int
	single():int
	add2(int, int) : int
end;

class Class1 implements /* nothing */ :
	var var1 : int;
	var var2 : int;
end;

class Class2 implements Interface1 Interface2 :
	var fac : int;
	var var2 : int;
	method init()
		var zero : int := 0H;
		var1 := (zero);
		var2 := zero;
		return 0;
	end;
	method add2(in1: int, in2: int)
		return in1+in2;
	end;
	method add3(in1: int, in2: int)
		return in1 + this.add2(in2, in3);
	end;
	method empty()
		/* Stats */
	end;
	method single()
		return this;
	end;
	method fact(n : int)
		if n < 0 then
			return 0;
		end;
		
		var fac : int := 1;
		var i : int := n;
		
		while (0 < i) do
			fac := fac * i;
		end;
		
		return fac;
		
	end;
end;

Ausgabe:
Identifier 'fac' on line 1 conflicts with identifier [fac] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_thenotoriousj-8.3:
interface Interface1:
	init():int
	add3(int, int, int) : int
end;

interface Interface2: 
	empty():int
	single():int
	add2(int, int) : int
end;

class Class1 implements /* nothing */ :
	var var1 : int;
	var var2 : int;
end;

class Class2 implements Interface1 Interface2 :
	var var1 : int;
	var var2 : int;
	method init()
		var zero : int := 0H;
		var1 := (zero);
		var2 := zero;
		return 0;
	end;
	method add2(in1: int, in2: int)
		return in1+in2;
	end;
	method add3(in1: int, in2: int)
		return in1 + this.add2(in2, in3);
	end;
	method empty()
		/* Stats */
	end;
	method single()
		return this;
	end;
	method fact(n : int)
		if n < 0 then
			return 0;
		end;
		
		var fac : int := 1;
		var i : int := n;
		
		while (0 < i) do
			var i : int := 0;
			fac := fac * i;
		end;
		
		return fac;
		
	end;
end;

Ausgabe:
Identifier 'i' on line 1 conflicts with identifier [i] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/ag_test_case_thenotoriousj-9.3:
interface Interface1:
	init():int
	add3(int, int, int) : int
end;

class Class1 implements /* nothing */ :
	var var1 : int;
	var var2 : int;
	var var3 : Interface2;
end;

interface Interface2: 
	empty():int
	single():int
	add2(int, int) : int
end;

class Class2 implements Interface1 Interface2 :
	var var1 : int;
	var var2 : int;
	method init()
		var zero : int := 0H;
		var1 := (zero);
		var2 := zero;
		return 0;
	end;
	method add2(in1: int, in2: int)
		return in1+in2;
	end;
	method add3(in1: int, in2: int)
		return in1 + this.add2(in2, in3);
	end;
	method empty()
		/* Stats */
	end;
	method single()
		return this;
	end;
	method fact(n : int)
		if n < 0 then
			return 0;
		end;
		
		var fac : int := 1;
		var i : int := n;
		
		while (0 < i) do
			fac := fac * i;
		end;
		
		return fac;
		
	end;
end;

Ausgabe:
Identifier with name 'Interface2' on line 1 is not visible in the current scope
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-1.3:
interface Interface1:
	init():int
	add3(int, int, int) : int
end;

interface Interface1: 
	empty():int
	single():int
	add2(int, int) : int
	fact(int, int) : int
end;

Ausgabe:
Identifier 'Interface1' on line 1 conflicts with identifier [Interface1] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-10.3:
interface Interface1:
	init():int
	add3(int, int, int) : int
end;

class Class1 implements /* nothing */ :
	var var1 : int;
	var var2 : int;
	var var3 : Interface1;
end;

interface Interface2: 
	empty():int
	single():int
	add2(int, int) : int
	add3(int, int) : int
end;

class Class2 implements Interface1 Interface2 :
	var var1 : int;
	var var2 : int;
	method init()
		var zero : int := 0H;
		var1 := (zero);
		var2 := zero;
		return 0;
	end;
	method add2(in1: int, in2: int)
		return in1+in2;
	end;
	method add3(in1: int, in2: int, in3: int)
		return in1 + this.add2(in2, in3);
	end;
	method empty()
		/* Stats */
	end;
	method single()
		return this;
	end;
	method fact(n : int)
		if n < 0 then
			return 0;
		end;
		
		var fac : int := 1;
		var i : int := n;
		
		while (0 < i) do
			fac := fac * i;
		end;
		
		return fac;
		
	end;
end;

Ausgabe:
Identifier 'add3' on line 1 conflicts with identifier [add3] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-2.3:
class Interface1 implements :
end;

interface Interface1: 
	empty():int
	single():int
	add2(int, int) : int
	fact(int, int) : int
end;

Ausgabe:
Identifier 'Interface1' on line 1 conflicts with identifier [Interface1] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-5.3:
interface Interface1:
	init():int
	add3(int, int, int) : int
end;

interface Interface2: 
	empty():int
	single():int
	add2(int, int) : int
end;

class Class1 implements /* nothing */ :
	var var1 : int;
	var var2 : int;
end;

class Class1 implements Interface1 Interface2 :
	var var1 : int;
	var var2 : int;
	method init()
		var zero : int := 0H;
		var1 := (zero);
		var2 := zero;
		return 0;
	end;
	method add2(in1: int, in2: int)
		return in1+in2;
	end;
	method add3(in1: int, in2: int)
		return in1 + this.add2(in2, in3);
	end;
	method empty()
		/* Stats */
	end;
	method single()
		return this;
	end;
	method fact(n : int)
		if n < 0 then
			return 0;
		end;
		
		var fac : int := 1;
		var i : int := n;
		
		while (0 < i) do
			fac := fac * i;
		end;
		
		return fac;
		
	end;
end;

Ausgabe:
Identifier 'Class1' on line 1 conflicts with identifier [Class1] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-6.3:
interface Interface1:
	init():int
	add3(int, int, int) : int
end;

interface Interface2: 
	empty():int
	single():int
	add2(int, int) : int
end;

class Class1 implements /* nothing */ :
	var var1 : int;
	var var2 : int;
end;

class Class2 implements Interface1 Interface2 :
	var var1 : int;
	var var2 : int;
	method init()
		var zero : int := 0H;
		var1 := (zero);
		var2 := zero;
		return 0;
	end;
	method add2(in1: int, in1: int)
		return in1+in2;
	end;
	method add3(in1: int, in2: int)
		return in1 + this.add2(in2, in3);
	end;
	method empty()
		/* Stats */
	end;
	method single()
		return this;
	end;
	method fact(n : int)
		if n < 0 then
			return 0;
		end;
		
		var fac : int := 1;
		var i : int := n;
		
		while (0 < i) do
			fac := fac * i;
		end;
		
		return fac;
		
	end;
end;

Ausgabe:
Identifier 'in1' on line 1 conflicts with identifier [in1] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-7.3:
interface Interface1:
	init():int
	add3(int, int, int) : int
end;

interface Interface2: 
	empty():int
	single():int
	add2(int, int) : int
end;

class Class1 implements /* nothing */ :
	var var1 : int;
	var var2 : int;
end;

class Class2 implements Interface1 Interface2 :
	var fac : int;
	var var2 : int;
	method init()
		var zero : int := 0H;
		var1 := (zero);
		var2 := zero;
		return 0;
	end;
	method add2(in1: int, in2: int)
		return in1+in2;
	end;
	method add3(in1: int, in2: int)
		return in1 + this.add2(in2, in3);
	end;
	method empty()
		/* Stats */
	end;
	method single()
		return this;
	end;
	method fact(n : int)
		if n < 0 then
			return 0;
		end;
		
		var fac : int := 1;
		var i : int := n;
		
		while (0 < i) do
			fac := fac * i;
		end;
		
		return fac;
		
	end;
end;

Ausgabe:
Identifier 'fac' on line 1 conflicts with identifier [fac] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-8.3:
interface Interface1:
	init():int
	add3(int, int, int) : int
end;

interface Interface2: 
	empty():int
	single():int
	add2(int, int) : int
end;

class Class1 implements /* nothing */ :
	var var1 : int;
	var var2 : int;
end;

class Class2 implements Interface1 Interface2 :
	var var1 : int;
	var var2 : int;
	method init()
		var zero : int := 0H;
		var1 := (zero);
		var2 := zero;
		return 0;
	end;
	method add2(in1: int, in2: int)
		return in1+in2;
	end;
	method add3(in1: int, in2: int)
		return in1 + this.add2(in2, in3);
	end;
	method empty()
		/* Stats */
	end;
	method single()
		return this;
	end;
	method fact(n : int)
		if n < 0 then
			return 0;
		end;
		
		var fac : int := 1;
		var i : int := n;
		
		while (0 < i) do
			var i : int := 0;
			fac := fac * i;
		end;
		
		return fac;
		
	end;
end;

Ausgabe:
Identifier 'i' on line 1 conflicts with identifier [i] on line 1
Status: korrekt

==========> Eingabe von /home/ublu21/u11808206/test/codeb/thenotoriousj-9.3:
interface Interface1:
	init():int
	add3(int, int, int) : int
end;

class Class1 implements /* nothing */ :
	var var1 : int;
	var var2 : int;
	var var3 : Interface2;
end;

interface Interface2: 
	empty():int
	single():int
	add2(int, int) : int
end;

class Class2 implements Interface1 Interface2 :
	var var1 : int;
	var var2 : int;
	method init()
		var zero : int := 0H;
		var1 := (zero);
		var2 := zero;
		return 0;
	end;
	method add2(in1: int, in2: int)
		return in1+in2;
	end;
	method add3(in1: int, in2: int)
		return in1 + this.add2(in2, in3);
	end;
	method empty()
		/* Stats */
	end;
	method single()
		return this;
	end;
	method fact(n : int)
		if n < 0 then
			return 0;
		end;
		
		var fac : int := 1;
		var i : int := n;
		
		while (0 < i) do
			fac := fac * i;
		end;
		
		return fac;
		
	end;
end;

Ausgabe:
Identifier with name 'Interface2' on line 1 is not visible in the current scope
Status: korrekt

Statistics: 
===========
           80 Tests total
           43 Tests passed
           37 Tests failed
